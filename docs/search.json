[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Background Information\nWhile the main purpose of this site is documenting methodology used in the Fiscal Futures Annual Report, it also contains useful information on Illinois budget variables used by the Illinois Office of the Comptroller (IOC) that may be valuable to other researchers. Frequently discussed topics (e.g. Pensions, Debt, Federal Revenue Sources, Medicaid, etc.) each have their own section on this site dedicated to looking at the many relevant variables for that topic, even if the budget variables are not directly included while calculating the Fiscal Gap for the Fiscal Futures Annual Report.\nThis website was originally created by Alea Wilbur-Mujtaba as an internal document for Fiscal Futures researchers to increase reproducibility and update the methodology documentation used for the Fiscal Futures Annual Report. Until August 2022, The FF Annual Report was calculated using Stata code and documentation that had been passed on for years and modified in a piece-meal fashion. AWM translated the Stata files into a very long Rmarkdown file before transitioning to a Github Page with downloadable public data. She also created the method for comparing funds/agencies/revenue sources in current and past fiscal years, identified the important data values and code relevant for various fiscal topics, and coded all files associated with creating this website. The methodology for selecting funds to include in the Fiscal Gap calculation and tracking them over time was created by David Merriman and Richard Dye and updated with the help of many PhD researchers since 2008.\nNote from Alea Wilbur-Mujtaba: This document is a good faith effort to increase reproducibility and transparency for both the Fiscal Futures Annual Report and Illinois budget data as a whole. I recognized that the time and effort spent on identifying variables and graphing fiscal topics could be valuable to other researchers and took the initiative to create this page and repository from the documents I inherited as an IGPA Research Assistant. This endeavor has had a sharp learning curve and I could easily have made mistakes along the way. This is a working document and small edits are made to the site frequently. I intend to document major changes with new repository releases.\nThe FY24 Fiscal Futures Report is available here: The State of Illinois’ FY 2024 Fiscal Situation: A Solid Performance but Threats Remain\nRead the FY23 Fiscal Futures Report here: Finding the Balance: State Fiscal Sustainability and Local Government Challenges\nYou can read the FY22 Fiscal Futures Annual Report here: Recovering from a (COVID) Spending Fever\nTo learn more about the history of the Fiscal Futures Project and read past reports, please visit The Fiscal Futures webpage. The Fiscal Future Project is one of many research projects within the University of Illinois’ Institute of Government and Public Affairs (IGPA).",
    "crumbs": [
      "Background Information"
    ]
  },
  {
    "objectID": "index.html#github-data-notes-and-organization",
    "href": "index.html#github-data-notes-and-organization",
    "title": "",
    "section": "Github Data Notes and Organization",
    "text": "Github Data Notes and Organization\nThe authors and IGPA believe that these novel datasets will be valuable to other researchers interested in Illinois’ finances.\n\nThe version of the files used in the analysis and to create this website are in the inputs/ioc_data_received/ folder. Original files as they were received from FOIA requests is in the inputs/ioc_data_received/DATA_RAW/ folder. The files within these folders are before cleaning or recoding the data. Most of the files for individual years are saved as .dta files due to using Stata before FY21.\nAll summary files and intermediate files are located in their corresponding data/FY____ Files/ folder\n\nFor example, a summary file containing aggregated yearly expenditure and revenue values for categories used in the Fiscal Futures model for FY2023 can be found in in data/FY2023 Files/ and is named summary_file_FY2023.xlsx. This excel file also contains additional tabs for all CAGR values calculated as well as the yearly change between the most recent fiscal year and the previous fiscal year. All tables included in the Annual Report are in the summary file.\n\nallexp_fy23_recoded.csv and allrev_fy23_recoded are probably the best for any researchers trying to use this data in their own projects.\n\n\n-   Cleanest version of data before aggregating totals or dropping observations not included in the Fiscal Futures fiscal gap calculation. All years in one file. Funds and agencies should have numbers and consistent labels. Includes the \"Group\" variable used in the FF Annual Report used for calculating expenditures by function. *To do: Add group names to go with group number code. Done after pivoting and merging in normal Fiscal Gap calculation code.*\n-   Created in February 2023. Still checking accuracy. AWM made this version of the data specifically for other researchers. The normal work flow for the Annual Report involves dropping observations gradually while cleaning and coding the data. Significant changes to the code used for the Annual Report were made to create a new dataset that attempts to keep all Illinois budget observations that have been consistently coded over time with the additional descriptive variables used by Fiscal Futures researchers. Again, I cannot guarantee the accuracy of this file but the original data and code for cleaning the data is available to get you started.\nexp_temp and rev_temp\n\nUsed in fiscal gap calculation. Data is cleaned and coded up to the point right before aggregating category totals. Drops observations we do not keep in fiscal gap calculation.\n\nThe Annual Report is part of Fiscal Futures project associated with the University of Illinois System Institute of Government and Policy Affairs (IGPA). Creating the R code, Github folder, and website for methodology was done by Alea Wilbur-Mujtaba. Any errors with code or findings are the fault of the author, not the research institute. Data is originally from annual FOIA requests to the Illinois Office of the Comptroller.",
    "crumbs": [
      "Background Information"
    ]
  },
  {
    "objectID": "Everything_changepensions.html",
    "href": "Everything_changepensions.html",
    "title": "1  Pension Costs Included within Department Expenditures",
    "section": "",
    "text": "1.1 Modify Expenditure File\nIn previous reports, a expenditure category was created to represent all Pension spending. It was created by removing pension expenditures out of the agencies that that had the expenses in order to highlight the amount that was spent on pensions.\nAs of the FY2024 report, pension expenditures will remain in the agency that has the pension expenses to better represent the total cost of providing a service to the public.\nHowever, we thought that readers also might be interested in total pension spending during current and past years. We have added a separate table showing this information but emphasize that pension spending is already incorporated in other spending categories and should not be added to the total shown in Table 1 of the report.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Pension Costs Included within Department Expenditures</span>"
    ]
  },
  {
    "objectID": "Everything_changepensions.html#modify-expenditure-file",
    "href": "Everything_changepensions.html#modify-expenditure-file",
    "title": "1  Pension Costs Included within Department Expenditures",
    "section": "",
    "text": "1.1.1 Tax refunds\nFor more details on refund items, see ?sec-taxrefunds.\nAggregate expenditures:\nCode refunds to match the rev_type codes (02=income taxes, 03=corporate income taxes, 06=sales tax, 09=motor fuel tax, 24=insurance taxes and fees, 35 = all other tax refunds).\nIdeally the money going in and out of the funds used for refunds would be approximately equal. If equal, would drop from Fiscal Futures analysis so that Revenue reflects the amount of money the state gets to keep (and the local portion that becomes the local govt transfer)\n\n\nCode\n# What we want: To exclude refunds as expenditures from our expenditure totals.\n# Exclude funds that hold refund funds from both revenue and expenditure sides\n# Revenue neutral unless budget tricks are occurring\n# still want to examine refunds over time to compare to past years calculations\n\n\ntax_refund_long &lt;- exp_temp %&gt;%  \n  \n  # filter out only refund objects\n    # keeps these objects which represent revenue, insurance, treasurer,and financial and professional reg tax refunds\n  filter(fund != \"0401\" & # fund != \"0401\" # removes State Trust Funds\n           (object == \"9900\" | object==\"9910\"|object==\"9921\"|object==\"9923\"|object==\"9925\")) %&gt;%\n  \n  # add revenue category numbers\n  mutate(refund = case_when(\n    object == \"9900\" ~ \"FY23_Rebates\",      # part of COVID relief\n    fund==\"0278\" & sequence == \"00\" ~ \"02\", # for income tax refund\n    fund==\"0278\" & sequence == \"01\" ~ \"03\", # tax administration and enforcement and tax operations become corporate income tax refund\n    fund == \"0278\" & sequence == \"02\" ~ \"02\",\n    object==\"9921\" ~ \"21\",                # inheritance tax and estate tax refund appropriation\n    object==\"9923\" ~ \"09\",                # motor fuel tax refunds\n    obj_seq_type == \"99250055\" ~ \"06\",    # sales tax refund\n    fund==\"0378\" & object==\"9925\" ~ \"24\", # insurance privilege tax refund\n    (fund==\"0001\" & object==\"9925\") | \n      (object==\"9925\" & fund == \"0384\" & \n         fy == 2023) ~ \"35\",               # all other taxes\n    T ~ \"CHECK\"))                       # if none of the items above apply to the observations, then code them as CHECK \n\n    \nexp_temp &lt;- left_join(exp_temp, tax_refund_long) %&gt;%\n  mutate(refund = ifelse(is.na(refund),\"not refund\", as.character(refund)))\n\n\n\n\nCode\ntax_refund &lt;- tax_refund_long %&gt;% \n  group_by(refund, fy)%&gt;%\n  summarize(refund_amount = sum(expenditure, na.rm = TRUE)/1000000) %&gt;%\n  pivot_wider(names_from = refund, values_from = refund_amount, names_prefix = \"ref_\") %&gt;%\n  mutate_all(~replace_na(.,0)) %&gt;%\n  arrange(fy)\n\ntax_refund %&gt;%\n  pivot_longer(c(ref_02:ref_35, ref_FY23_Rebates), names_to = \"Refund Type\", values_to = \"Amount\") %&gt;%\n  ggplot()+\n  theme_classic()+\n  geom_line(aes(x=fy,y=Amount, group = `Refund Type`, color = `Refund Type`))+\n  labs(title = \"Refund Types\",\n       caption = \"Refunds are excluded from Expenditure totals and instead subtracted from Revenue totals\") +\n  labs(title = \"Tax refunds\",\n       caption = \"Rev_type codes: 02=income taxes, 03=corporate income taxes, 06=sales tax, 09=motor fuel tax,\n       24=insurance taxes and fees, 35 = all other tax refunds.\" )\n\n# remove the items we recoded in tax_refund_long\n# exp_temp &lt;- exp_temp %&gt;% filter(refund == \"not refund\")\n\n\n\n\n\n\nFigure 1.1: Tax Refunds\n\n\n\n\n\n\n\nFor FY23, the one-time abatement, object 9900, is included as an expenditure item within the Department of Revenue.\n\n\nCode\n# manually adds the abatements as expenditure item and keeps on expenditure side.\n# otherwise ignored since it is in fund 0278 and \nexp_temp &lt;- exp_temp %&gt;%\n  mutate(in_ff = ifelse(object == 9900, 1, in_ff))\n\n\n\n\n1.1.2 Pension Expenditures\nState pension contributions for TRS and SURS are largely captured with object=4431. (State payments into pension fund). State payments to the following pension systems:\n\nTeachers Retirement System (TRS) Agency 493 –&gt; K-12 Education (Group = 959)\nNew POB bond in 2019: Accelerated Bond Fund paid benefits in advance as lump sum\n\nState Employee Retirement System (SERS) Agency 589 –&gt; SERS Agency 589 - Note: Object 4431 does not have SERS expenditures in it. Those are only in object 116X objects\n\nState University Retirement System (SURS) Agency 693 –&gt; University Education (Group = 960)\n\nJudges Retirement System (JRS) Agency 275 –&gt; Judicial (Group = 920)\n\nGeneral Assembly Retirement System (GARS) –&gt; Legislative (Group 910)\n\nThere are also “Other Post-Employment Benefits” (OPEBs). Expenditure object 4430 is for retirement benefits.\nWhile it is good to know the overall cost of pensions for the state, if you want to know the true cost of providing services, pension and other benefit costs should be included in the department that is paying employees to provide those services.\n\nChange in pension coding in chunk below:\n\n\n\nCode\nexp_temp &lt;-  exp_temp %&gt;% \n  arrange(fund) %&gt;%\n  mutate(pension = case_when( \n    \n    ## Commented out line below:\n     (object==\"4431\") ~ 1, # 4431 = easy to find pension payments INTO fund\n    \n\n    \n    (object==\"1298\" &  # Purchase of Investments, Normally excluded\n       (fy==2010 | fy==2011) & \n       (fund==\"0477\" | fund==\"0479\" | fund==\"0481\")) ~ 3, #judges retirement OUT of fund\n    # state borrowed money from pension funds to pay for core services during 2010 and 2011. \n    # used to fill budget gap and push problems to the future. \n    \n    fund == \"0319\" ~ 4, # pension stabilization fund\n    TRUE ~ 0) )\n\n\n\n\nCode\n# special accounting of pension obligation bond (POB)-funded contributions to JRS, SERS, GARS, TRS \n\nexp_temp &lt;- exp_temp %&gt;% \n  # change object for 2010 and 2011, retirement expenditures were bond proceeds and would have been excluded\n  mutate(object = ifelse((pension &gt; 0 & in_ff == \"0\"), \"4431\", object)) %&gt;% \n  # changes weird teacher & judge retirement system  pensions object to normal pension object 4431\n  mutate(pension =  ifelse(pension &gt; 0 & in_ff == \"0\", 6, pension)) %&gt;% # coded as 6 if it was supposed to be excluded. \n  mutate(in_ff = ifelse(pension &gt; 0, \"1\", in_ff))\n\n\n\n# # all other pensions objects  codes get agency code 901 for State Pension Contributions\n# exp_temp &lt;- exp_temp %&gt;% \n#   mutate(agency = ifelse(pension &gt; 0, \"901\", as.character(agency)),\n#          agency_name = ifelse(agency == \"901\", \"State Pension Contributions\", as.character(agency_name)))\n\n\nCan also be thought of past commitments vs current contributions.\n\nWhere past commitments in the form of pension benefits paid out.\n\nCurrent Employees vs Retired Employees\nCurrent Employees: - Group Insurance Benefits\nRetired Employees: - Deferred Compensation\n- Medicare Retirees and Survivors of State of Illinois Employees Group Insurance Program (SEGIP)\n- Part of Medicare\n\n\nCode\nexp_temp|&gt;\n  filter(fy==2024) |&gt;\n  filter((appr_org==\"01\" | appr_org == \"65\" | appr_org==\"88\") & (object==\"4900\" | object==\"4400\") )|&gt; \n  group_by(agency, agency_name) |&gt; # separates CHIP from health and human services and saves it as Medicaid\n  summarize(expenditure = sum(expenditure))\n\n\n\n  \n\n\n\nDrop all cash transfers between funds, statutory transfers, and purchases of investments from expenditure data.\n\n\nCode\ntransfers_drop &lt;- exp_temp %&gt;% filter(\n  agency == \"799\" | # statutory transfers\n           object == \"1993\" |  # interfund cash transfers\n           object == \"1298\") # purchase of investments\ntransfers_drop # items being dropped, \n\n\n\n  \n\n\n\nCode\n# always check to make sure you aren't accidentally dropping something of interest.\n\nexp_temp &lt;- anti_join(exp_temp, transfers_drop)\n\n\n\n\n1.1.3 State employee healthcare costs\n\nCommented out line of code that seperates healthcare costs. This should keep healthcare costs in the agency, similar to the change that was made for pensions.\n\nAlso not grouping the agencies below into “Other Departments” until final steps of aggregation. Smallest agencies will be combined into Other Departments for final summary tables.\nagency==\"507\"|  agency==\"442\" | agency==\"445\" | agency==\"452\" |agency==\"458\" | agency==\"497\" ~ \"948\", # other departments\nWhen healthcare costs are not manually separated into their own category, it looks like the costs shift to many of the smaller departments, such as:\n\nGOMB (507)\n\nHuman Rights (442)\n\nIllinois Power Agency (445)\n\nLabor (452)\n\nState Lottery (458)\n\nVeteran’s Affairs (497)\n\n\n\nCode\n#if observation is a group insurance contribution, then the expenditure amount is set to $0 (essentially dropped from analysis)\n\n# pretend eehc is named group_insurance_contribution or something like that\n# eehc coded as zero implies that it is group insurance\n# if eehc=0, then expenditures are coded as zero for group insurance to avoid double counting costs\n\n\nexp_temp &lt;- exp_temp %&gt;% \n  mutate(eehc = ifelse(\n    # group insurance contributions for 1998-2005 and 2013-present\n   fund == \"0001\" & (object == \"1180\" | object ==\"1900\") & agency == \"416\" & appr_org==\"20\", 0, 1) )%&gt;% \n  \n  mutate(eehc = ifelse(\n    # group insurance contributions for 2006-2012\n    fund == \"0001\" & object == \"1180\" & agency == \"478\" \n    & appr_org==\"80\", 0, eehc) )%&gt;%\n    \n   # group insurance contributions from road fund\n  # coded with 1900 for some reason??\n    mutate(eehc = ifelse(\n      fund == \"0011\" & object == \"1900\" & \n        agency == \"416\" & appr_org==\"20\", 0, eehc) ) %&gt;%\n  \n  mutate(expenditure = ifelse(eehc==\"0\", 0, expenditure)) %&gt;%\n\n  mutate(agency = case_when(\n    ## turns specific items into State Employee Healthcare (agency=904)\n      fund==\"0907\" & (agency==\"416\" & appr_org==\"20\") ~ \"904\",   # central management Bureau of benefits using health insurance reserve\n      fund==\"0907\" & (agency==\"478\" & appr_org==\"80\") ~ \"904\",   # agency = 478: healthcare & family services using health insurance reserve - stopped using this in 2012\n       TRUE ~ as.character(agency))) %&gt;%\n  \n  mutate(agency_name = ifelse(\n    agency == \"904\", \"STATE EMPLOYEE HEALTHCARE\", as.character(agency_name)),\n         in_ff = ifelse(agency == \"904\", 1, in_ff),\n         group = ifelse(agency == \"904\", \"904\", as.character(agency)))  \n# creates group variable\n\n# Default group = agency number\n\nhealthcare_costs &lt;- exp_temp %&gt;% filter(group == \"904\")\n\n\n\n\nCode\nexp_temp &lt;- exp_temp %&gt;% mutate(\n  agency = case_when(fund==\"0515\" & object==\"4470\" & type==\"08\" ~ \"971\", # income tax to local governments\n                     fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"00\" ~ \"971\", # object is shared revenue payments\n                     fund==\"0802\" & object==\"4491\" ~ \"972\", #pprt transfer\n                     fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"01\" ~ \"976\", #gst to local\n                     fund==\"0627\" & object==\"4472\"~ \"976\" , # public transportation fund but no observations exist\n                     fund==\"0648\" & object==\"4472\" ~ \"976\", # downstate public transportation, but doesn't exist\n                     fund==\"0515\" & object==\"4470\" & type==\"00\" ~ \"976\", # object 4470 is grants to local governments\n                    object==\"4491\" & (fund==\"0188\"|fund==\"0189\") ~ \"976\",\n                     fund==\"0187\" & object==\"4470\" ~ \"976\",\n                     fund==\"0186\" & object==\"4470\" ~ \"976\",\n                    object==\"4491\" & (fund==\"0413\"|fund==\"0414\"|fund==\"0415\")  ~ \"975\", #mft to local\n                  fund == \"0952\"~ \"975\", # Added Sept 29 2022 AWM. Transportation Renewal MFT\n                    TRUE ~ as.character(agency)),\n  \n  agency_name = case_when(agency == \"971\"~ \"INCOME TAX 1/10 TO LOCAL\",\n                          agency == \"972\" ~ \"PPRT TRANSFER TO LOCAL\",\n                          agency == \"975\" ~ \"MFT TO LOCAL\",\n                          agency == \"976\" ~ \"GST TO LOCAL\",\n                          TRUE~as.character(agency_name)),\n  group = ifelse(agency&gt;\"970\" & agency &lt; \"977\", as.character(agency), as.character(group)))\n\n\n\n\nCode\ntransfers_long &lt;- exp_temp %&gt;% \n  filter(group == \"971\" |group == \"972\" | group == \"975\" | group == \"976\")\n\n\ntransfers &lt;- transfers_long %&gt;%\n  group_by(fy, group ) %&gt;%\n  summarize(sum_expenditure = sum(expenditure)/1000000) %&gt;%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditure\", names_prefix = \"exp_\" )\n\nexp_temp &lt;- anti_join(exp_temp, transfers_long)\n\n\ndropped_inff_0 &lt;- exp_temp %&gt;% filter(in_ff == 0)\n\nexp_temp &lt;- exp_temp %&gt;% filter(in_ff == 1) # drops in_ff = 0 funds AFTER dealing with net-revenue above\n\n\n\n\nCode\ndebt_drop &lt;- exp_temp %&gt;% \n  filter(object == \"8841\" |  object == \"8811\")  \n# escrow  OR  principle\n\n#debt_drop %&gt;% group_by(fy) %&gt;% summarize(sum = sum(expenditure)) %&gt;% arrange(-fy)\n\n\ndebt_keep &lt;- exp_temp %&gt;% \n  filter(fund != \"0455\" & (object == \"8813\" | object == \"8800\" )) \n# examine the debt costs we want to include\n\n#debt_keep %&gt;% group_by(fy) %&gt;% summarize(sum = sum(expenditure)) %&gt;% arrange(-fy) \n\n\nexp_temp &lt;- anti_join(exp_temp, debt_drop) \nexp_temp &lt;- anti_join(exp_temp, debt_keep)\n\ndebt_keep &lt;- debt_keep %&gt;%\n  mutate(\n    agency = ifelse(fund != \"0455\" & (object == \"8813\" | object == \"8800\"), \"903\", as.character(agency)),\n    group = ifelse(fund != \"0455\" & (object == \"8813\" | object == \"8800\"), \"903\", as.character(group)),\n    in_ff = ifelse(group == \"903\", 1, as.character(in_ff)))\n\ndebt_keep_yearly &lt;- debt_keep %&gt;% \n  group_by(fy, group) %&gt;% \n  summarize(debt_cost = sum(expenditure,na.rm=TRUE)/1000000) %&gt;% \n  select(-group)\n\n\n\n\n1.1.4 Add Other Fiscal Future group codes\n\n\nCode\nexp_temp &lt;- exp_temp %&gt;%\n  #mutate(agency = as.numeric(agency) ) %&gt;%\n  # arrange(agency)%&gt;%\n  mutate(\n    group = case_when(\n      agency&gt;\"100\"& agency&lt;\"200\" ~ \"910\", # legislative\n      \n      agency == \"528\"  | (agency&gt;\"200\" & agency&lt;\"300\") ~ \"920\", # judicial\n      \n      ######################################################\n      # Not used if we are not separating pension costs!!\n      # pension &gt; 0  ~ \"901\", # pensions\n      \n      ## New CODE: April 23rd, 2025:\n      agency == \"593\" ~ \"959\", #  TRS becomes part of K-12 costs\n      agency == \"594\" ~ \"959\",   # TRS\n      agency == \"589\" ~ \"948\", # SERS becomes part of \"Other Agencies\"\n      agency == \"693\" ~ \"960\", # SURS becomes part of group 960\n      agency == \"275\" ~ \"920\",  # JRS becomes part of group 920\n      agency == \"131\" ~  \"910\", # GARS becomes part of Group 910\n      ######################################################\n      \n      (agency&gt;\"309\" & agency&lt;\"400\") ~ \"930\",    # elected officers: Governor, lt gov, attorney general, sec. of state, comptroller, treasurer\n      \n      agency == \"586\" ~ \"959\", # create new K-12 group\n\n      agency==\"402\" | agency==\"418\" | agency==\"478\" | agency==\"444\" | agency==\"482\" ~ as.character(agency), # aging, CFS, HFS, human services, public health\n      \n      T ~ as.character(group))\n    ) %&gt;%      \n\n  \n  mutate(group = case_when(\n    agency==\"478\" & (appr_org==\"01\" | appr_org == \"65\" | appr_org==\"88\") & (object==\"4900\" | object==\"4400\") ~ \"945\", # separates CHIP from health and human services and saves it as Medicaid\n    \n    agency == \"586\" & fund == \"0355\" ~ \"945\",  # 586 (Board of Edu) has special education which is part of medicaid\n    \n    # OLD CODE: agency == \"586\" & appr_org == \"18\" ~ \"945\", # Spec. Edu Medicaid Matching\n    \n    agency==\"425\" | agency==\"466\" | agency==\"546\" | agency==\"569\" | agency==\"578\" | agency==\"583\" | agency==\"591\" | agency==\"592\" | agency==\"493\" | agency==\"588\" ~ \"941\", # public safety & Corrections\n    \n    agency==\"420\" | agency==\"494\" |  agency==\"406\" | agency==\"557\" ~ as.character(agency), # econ devt & infra, tollway\n    \n    agency==\"511\" | agency==\"554\" | agency==\"574\" | agency==\"598\" ~ \"946\",  # Capital improvement\n    \n    agency==\"422\" | agency==\"532\" ~ as.character(agency), # environment & nat. resources\n    \n    agency==\"440\" | agency==\"446\" | agency==\"524\" | agency==\"563\"  ~ \"944\", # business regulation\n    \n    agency==\"492\" ~ \"492\", # revenue\n    \n    agency == \"416\" ~ \"416\", # central management services\n    agency==\"448\" & fy &gt; 2016 ~ \"416\", #add DoIT to central management \n    \n    T ~ as.character(group))) %&gt;%\n  \n  \n  mutate(group = case_when(\n    # agency==\"684\" | agency==\"691\"  ~ as.character(agency), # moved under higher education in next line. 11/28/2022 AWM\n    \n    agency==\"692\" | agency == \"693\" | agency==\"695\" | agency == \"684\" |agency == \"691\" | (agency&gt;\"599\" & agency&lt;\"677\") ~ \"960\", # higher education\n    \n    agency==\"427\"  ~ as.character(agency), # employment security\n    \n############################ \n# Leaving these agencies as their own agency number for now. \n# Had been coded to \"Other departments\" Group 948\n# - GOMB (507)  \n# - Human Rights (442)  \n# - Illinois Power Agency (445)  \n# - Labor (452)   \n# - State Lottery (458)   \n# - Veteran's Affairs (497) \n\n  #     agency==\"507\" | agency==\"442\" | agency==\"445\" | agency==\"452\" |agency==\"458\" | agency==\"497\" ~ as.character(agency), # Were included within \"other departments\"\n    \n    agency==\"507\"|  agency==\"442\" | agency==\"445\" | agency==\"452\" |agency==\"458\" | agency==\"497\" ~ \"948\", # other departments\n###########################################\n    \n\n# other boards & Commissions\n    agency==\"503\" | agency==\"509\" | agency==\"510\" | agency==\"565\" |agency==\"517\" | agency==\"525\" | agency==\"526\" | agency==\"529\" | agency==\"537\" | agency==\"541\" | agency==\"542\" | agency==\"548\" |  agency==\"555\" | agency==\"558\" | agency==\"559\" | agency==\"562\" | agency==\"564\" | agency==\"568\" | agency==\"579\" | agency==\"580\" | agency==\"587\" | agency==\"590\" | agency==\"527\" | agency==\"585\" | agency==\"567\" | agency==\"571\" | agency==\"575\" | agency==\"540\" | agency==\"576\" | agency==\"564\" | agency==\"534\" | agency==\"520\" | agency==\"506\" | agency == \"533\" ~ \"949\", \n    \n  #   # Other Departments\n  #   agency==\"131\" |\n  # #  agency==\"275\" | #JRS\n  # #  agency==\"589\" | #SERS\n  #  # agency==\"593\"|  # TRS\n  # #  agency==\"594\"| # Also TRS\n  # #  agency==\"693\"   #SURS\n  #  ~ \"948\",\n    \n    T ~ as.character(group))) %&gt;%\n  \n  mutate(group_name = \n           case_when(\n             group == \"416\" ~ \"Central Management\",\n             group == \"442\" ~ \"Human Rights\",\n             group == \"445\"  ~ \"Illinois Power Agency\",\n             group == \"452\" ~ \"Labor\",\n             group == \"458\" ~ \"State Lottery\",\n             group == \"489\" ~ \"SERS\",\n             group == \"478\" ~ \"Healthcare and Family Services\",\n             group == \"482\" ~ \"Public Health\",\n             group == \"497\" ~ \"Veteran's Affairs\",\n             group == \"507\" ~ \"GOMB\",\n             group == \"901\" ~ \"STATE PENSION CONTRIBUTION\",\n             group == \"903\" ~ \"DEBT SERVICE\",\n             group == \"910\" ~ \"LEGISLATIVE\"  ,\n             group == \"920\" ~ \"JUDICIAL\" ,\n             group == \"930\" ~ \"ELECTED OFFICERS\" , \n             group == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             group == \"941\" ~ \"PUBLIC SAFETY\" ,\n             group == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n             group == \"943\" ~ \"CENTRAL SERVICES\",\n             group == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             group == \"945\" ~ \"MEDICAID\" ,\n             group == \"946\" ~ \"CAPITAL IMPROVEMENT\" , \n             group == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n             group == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             group == \"959\" ~ \"K-12 EDUCATION\" ,\n             group == \"960\" ~ \"UNIVERSITY EDUCATION\" ,\n             group == agency ~ as.character(agency_name),\n             TRUE ~ \"Check name\"),\n         year = fy)\n\nexp_temp %&gt;% filter(group_name == \"Check name\")\n\n\n\n  \n\n\n\nCode\nwrite_csv(exp_temp, file = paste0(\"./data/FY\", current_year, \" Files/all_expenditures_recoded_pensionrecode.csv\"))\n\n\n\n\n\n\n\n\nImportant\n\n\n\nAll expenditures recoded but not aggregated: Allows for inspection of individual expenditures within larger categories. This stage of the data is extremely useful for investigating how individual items have been coded before they are aggregated into larger categories.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Pension Costs Included within Department Expenditures</span>"
    ]
  },
  {
    "objectID": "Everything_changepensions.html#modify-revenue-data",
    "href": "Everything_changepensions.html#modify-revenue-data",
    "title": "1  Pension Costs Included within Department Expenditures",
    "section": "1.2 Modify Revenue data",
    "text": "1.2 Modify Revenue data\n\n\nCode\n# recodes old agency numbers to consistent agency number\nrev_temp &lt;- rev_temp %&gt;% \n  mutate(agency = case_when(\n    (agency==\"438\"| agency==\"475\" |agency == \"505\") ~ \"440\",\n    # financial institution &  professional regulation &\n     # banks and real estate  --&gt; coded as  financial and professional reg\n    agency == \"473\" ~ \"588\", # nuclear safety moved into IEMA\n    (agency ==\"531\" | agency ==\"577\") ~ \"532\", # coded as EPA\n    (agency ==\"556\" | agency == \"538\") ~ \"406\", # coded as agriculture\n    agency == \"560\" ~ \"592\", # IL finance authority (fire trucks and agriculture stuff)to state fire marshal\n    agency == \"570\" & fund == \"0011\" ~ \"494\",   # city of Chicago road fund to transportation\n    TRUE ~ (as.character(agency)))) \n\n\n\n\nCode\n#rev_temp &lt;- rev_temp %&gt;% filter(in_ff==1)\n\nrev_temp &lt;- rev_temp %&gt;% \n  mutate(\n    rev_type = ifelse(rev_type==\"57\" & agency==\"478\" & (source==\"0618\"|source==\"2364\"|source==\"0660\"|source==\"1552\"| source==\"2306\"| source==\"2076\"|source==\"0676\"|source==\"0692\"), \"58\", rev_type),\n    rev_type_name = ifelse(rev_type==\"58\", \"Federal Medicaid Reimbursements\", rev_type_name),\n    rev_type = ifelse(rev_type==\"57\" & agency==\"494\", \"59\", rev_type),\n    rev_type_name = ifelse(rev_type==\"59\", \"Federal Transportation\", rev_type_name),\n    rev_type_name = ifelse(rev_type==\"57\", \"Federal - Other\", rev_type_name),\n    rev_type = ifelse(rev_type==\"6\", \"06\", rev_type),\n    rev_type = ifelse(rev_type==\"9\", \"09\", rev_type)) \n\n\n\n\nCode\nrev_temp &lt;- rev_temp %&gt;% mutate(covid_dollars = ifelse(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\",1,0))\n\nrev_temp %&gt;% filter(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\") %&gt;%\n  group_by(fy) %&gt;% summarize(Received = sum(receipts))\n\n\n\n  \n\n\n\n\n1.2.1 Health Insurance Premiums from Employees\nInsurance premiums for employees is coded below but it is NOT used in the fiscal futures model. Employee and employer premiums are considered rev_51 and dropped from analysis in later step.\n\n0120 = ins prem-option life\n0120 = ins prem-optional life/univ\n0347 = optional health - HMO\n0348 = optional health - dental\n0349 = optional health - univ/local SI\n0350 = optional health - univ/local\n0351 = optional health - retirement\n0352 = optional health - retirement SI\n0353 = optional health - retire/dental\n0354 = optional health - retirement hmo\n2199-2209 = various HMOs, dental, health plans from Health Insurance Reserve (fund)\n\n\n\nCode\n#collect optional insurance premiums to fund 0907 for use in eehc expenditure  \nrev_temp &lt;- rev_temp %&gt;% \n  mutate(\n    employee_premiums = ifelse(fund==\"0907\" & (source==\"0120\"| source==\"0121\"| (source&gt;\"0345\" & source&lt;\"0357\")|(source&gt;\"2199\" & source&lt;\"2209\")), 1, 0),\n    \n    # adds more rev_type codes\n    rev_type = case_when(\n      fund ==\"0427\" ~ \"12\", # pub utility tax\n      fund == \"0742\" | fund == \"0473\" ~ \"24\", # insurance and fees\n      fund == \"0976\" ~ \"36\",# receipts from rev producing\n      fund == \"0392\" |fund == \"0723\" ~ \"39\", # licenses and fees\n      fund == \"0656\" ~ \"78\", #all other rev sources\n      TRUE ~ as.character(rev_type)))\n# if not mentioned, then rev_type as it was\n\n\n\n# # optional insurance premiums = employee insurance premiums\n\n# emp_premium &lt;- rev_temp %&gt;%\n#   group_by(fy, employee_premiums) %&gt;%\n#   summarize(employee_premiums_sum = sum(receipts)/1000000) %&gt;%\n#   filter(employee_premiums == 1) %&gt;%\n#   rename(year = fy) %&gt;% \n#   select(-employee_premiums)\n\nemp_premium_long &lt;- rev_temp %&gt;%  filter(employee_premiums == 1)\n# 381 observations have employee premiums == 1\n\n\n# drops employee premiums from revenue\n# rev_temp &lt;- rev_temp %&gt;% filter(employee_premiums != 1)\n# should be dropped in next step since rev_type = 51\n\n\n\n\n1.2.2 Transfers in and Out:\nFunds that hold and disperse local taxes or fees are dropped from the analysis. Then other excluded revenue types are also dropped.\nDrops Blank, Student Fees, Retirement contributions, proceeds/investments, bond issue proceeds, interagency receipts, cook IGT, Prior year refunds:\n\n\nCode\nrev_temp &lt;- rev_temp %&gt;% \n  filter(in_ff == 1) %&gt;% \n  mutate(local = ifelse(is.na(local), 0, local)) %&gt;% # drops all revenue observations that were coded as \"local == 1\"\n  filter(local != 1)\n\n# 1175 doesnt exist?\nin_from_out &lt;- c(\"0847\", \"0867\", \"1175\", \"1176\", \"1177\", \"1178\", \"1181\", \"1182\", \"1582\", \"1592\", \"1745\", \"1982\", \"2174\", \"2264\")\n\n# what does this actually include:\n# all are items with rev_type = 75 originally. \nin_out_df &lt;- rev_temp %&gt;%\n  mutate(infromout = ifelse(source %in% in_from_out, 1, 0)) %&gt;%\n  filter(infromout == 1)\n\nrev_temp &lt;- rev_temp %&gt;% \n   mutate(rev_type_new = ifelse(source %in% in_from_out, \"76\", rev_type))\n# if source contains any of the codes in in_from_out, code them as 76 (all other rev).\n# I end up excluding rev_76 in later steps\n\n\n\n\nCode\n# revenue types to drop\ndrop_type &lt;- c(\"32\", \"45\", \"51\", \n               \"66\", \"72\", \"75\", \"76\", \"79\", \"98\", \"99\")\n\n# drops Blank, Student Fees, Retirement contributions, proceeds/investments,\n# bond issue proceeds, interagency receipts, cook IGT, Prior year refunds.\n\n\nrev_temp &lt;- rev_temp %&gt;% filter(!rev_type_new %in% drop_type)\n# keep observations that do not have a revenue type mentioned in drop_type\n\ntable(rev_temp$rev_type_new)\n\n\n\n   02    03    06    09    12    15    18    21    24    27    30    31    33 \n  209   148   901   148   629   291    51  1423   517    85   677   140   160 \n   35    36    39    42    48    54    57    58    59    60    63    78 \n  751  5668 10376  3313    34  1351  7124   698   247   109  5797 12649 \n\n\nCode\nrev_temp %&gt;% \n  group_by(fy, rev_type_new) %&gt;% \n  summarize(total_reciepts = sum(receipts)/1000000) %&gt;%\n  pivot_wider(names_from = rev_type_new, values_from = total_reciepts, names_prefix = \"rev_\") \n\n\n\n  \n\n\n\nCode\nwrite_csv(exp_temp, file = paste0(\"./data/FY\", current_year, \" Files/exp_pensionrecode.csv\"))\nwrite_csv(rev_temp, file = paste0(\"./data/FY\", current_year, \" Files/rev_pensionrecode.csv\"))",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Pension Costs Included within Department Expenditures</span>"
    ]
  },
  {
    "objectID": "Everything_changepensions.html#pivoting-and-merging",
    "href": "Everything_changepensions.html#pivoting-and-merging",
    "title": "1  Pension Costs Included within Department Expenditures",
    "section": "1.3 Pivoting and Merging",
    "text": "1.3 Pivoting and Merging\n\n1.3.1 Revenues\n\n\n\nCode\nff_rev &lt;- rev_temp %&gt;% \n  group_by(rev_type_new, fy) %&gt;% \n  summarize(sum_receipts = sum(receipts, na.rm=TRUE)/1000000 ) %&gt;%\n  pivot_wider(names_from = \"rev_type_new\", values_from = \"sum_receipts\", names_prefix = \"rev_\")\n\n\nff_rev &lt;- mutate_all(ff_rev, ~replace_na(.,0))\n\n# \n# ff_rev &lt;- ff_rev %&gt;%\n#   mutate(rev_02 = rev_02 - ref_02,\n#          rev_03 = rev_03 - ref_03,\n#          rev_06 = rev_06 - ref_06,\n#          rev_09 = rev_09 - ref_09,\n#          rev_21 = rev_21 - ref_21,\n#          rev_24 = rev_24 - ref_24,\n#          rev_35 = rev_35 - ref_35\n# \n#       #   rev_78new = rev_78 #+ pension_amt #+ eehc\n#          ) %&gt;% \n#   select(-c(ref_02:ref_35, rev_99, rev_NA, rev_76\n#             #, ref_CHECK#, pension_amt , rev_76,\n#           #  , eehc\n#             ))\n# \n# ff_rev\n\n\n\n#noproblem &lt;- c(0)  # if ref_CHECK = $0, then there is no problem. :) \n# \n# if((sum(ff_rev$ref_CHECK) == 0 )){\n# \n# ff_rev &lt;- ff_rev %&gt;%\n#   \n#   mutate(rev_02 = rev_02 - ref_02,\n#          rev_03 = rev_03 - ref_03,\n#          rev_06 = rev_06 - ref_06,\n#          rev_09 = rev_09 - ref_09,\n#          rev_21 = rev_21 - ref_21,\n#          rev_24 = rev_24 - ref_24,\n#          rev_35 = rev_35 - ref_35\n#          ) %&gt;% \n#   select(-c(ref_02:ref_35, rev_99, rev_76, ref_CHECK )) \n# }else{\"You have a problem! Check what revenue items did not have rev codes (causing it to be coded as rev_NA) or the check if there were refunds that were not assigned revenue codes (tax_refunds_long objects)\"}\n\nff_rev %&gt;%  mutate_all(., ~round(.,digits=0))\n\n\n\n\nTable 1.1: Pivoted Revenue Table ($ Millions) - Intermediate Step. Not actually used for anything other than to have output in same format as old STATA output to make it easily comparable.\n\n\n\n\n  \n\n\n\n\n\n\n\n\n1.3.2 Expenditures\nCreate exp_970 for all local government transfers (exp_971 + exp_972 + exp_975 + exp_976).\n\n\n\nTable 1.2: Pivoted Expenditure Categories ($ Millions). Intermediate step. Not actually used for anything other than having output similar to past STATA output.\n\n\n\nCode\nff_exp &lt;- exp_temp %&gt;% \n  group_by(fy, group) %&gt;% \n  summarize(sum_expenditures = sum(expenditure, na.rm=TRUE)/1000000 ) %&gt;%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditures\", names_prefix = \"exp_\")%&gt;%\n  \n    left_join(debt_keep_yearly) %&gt;%\n  rename(exp_903 = debt_cost) %&gt;%\n #  join local transfers and create exp_970\n  left_join(transfers) %&gt;%\n  mutate(exp_970 = exp_971 + exp_972  + exp_975 + exp_976)\n\n ff_exp&lt;- ff_exp %&gt;% \n  select(-c(exp_971:exp_976)) # drop unwanted columns that are already included in exp_970\n\n# ff_exp # not labeled",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Pension Costs Included within Department Expenditures</span>"
    ]
  },
  {
    "objectID": "Everything_changepensions.html#summary-tables---largest-categories",
    "href": "Everything_changepensions.html#summary-tables---largest-categories",
    "title": "1  Pension Costs Included within Department Expenditures",
    "section": "3.1 Summary Tables - Largest Categories",
    "text": "3.1 Summary Tables - Largest Categories\nThe 10 largest revenue sources and 15 largest expenditure sources remain separate categories and all other smaller sources/expenditures are combined into “All Other Revenues (Expenditures)”. These condensed tables are typically used in the Fiscal Futures articles. They were manually created in past years but this hopefully automates the process a bit until final formatting stages.\n\n\n\nTable 3.5: Largest Revenue Categories with CAGRs\n\n\n\nCode\nn_categories &lt;- 10+1 # (Top 10 and then Total )\n\nrev_majorcats &lt;- rev_long |&gt; \n  filter(Year == current_year | Year == first_year\n         ) |&gt;\n  arrange(desc(Dollars)) |&gt;\n  slice(1:n_categories)\n\nrev_long_majorcats &lt;- rev_long |&gt;\n  mutate(Category_name = ifelse(Category_name %in% rev_majorcats$Category_name, Category_name, \"All Other Sources\"),\n         Category_name = ifelse(Category_name == \"Total\", \"Total Revenue\", Category_name)) |&gt;\n  group_by(Year, Category_name) |&gt; \n  summarize(Dollars = sum(Dollars, na.rm=TRUE))\n\n\n# creates wide version of table where each revenue source is a column\nrevenue_wide_majorcats &lt;- rev_long_majorcats %&gt;% \n  pivot_wider(names_from = Category_name, \n              values_from = Dollars) %&gt;%\n  relocate(\"All Other Sources\", .after = last_col()) %&gt;%\n  relocate(\"Total Revenue\", .after =  last_col())\n\n\n\n\n\n\nCode\nCAGR_revenue_majorcats_tot &lt;- cagr_calculations(rev_long_majorcats) %&gt;%   \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %&gt;% \n  rename(\"Revenue Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10, \"27 Year CAGR\" = cagr_max )\n\nallother_row &lt;- which(grepl(\"All Other\", CAGR_revenue_majorcats_tot$`Revenue Category`))\n\nCAGR_revenue_majorcats_tot &lt;- move_to_last(CAGR_revenue_majorcats_tot, allother_row) # Move \"All Other\" to 2nd to last row\n\ntotalrow &lt;- which(grepl(\"Total\", CAGR_revenue_majorcats_tot$`Revenue Category`))\nCAGR_revenue_majorcats_tot &lt;- move_to_last(CAGR_revenue_majorcats_tot, totalrow) # Move \"Total\" to last row\n\nlastrow = nrow(CAGR_revenue_majorcats_tot)\n\nCAGR_revenue_majorcats_tot %&gt;% \n  kbl(caption = \"CAGR Calculations for Largest Revenue Sources\", row.names = FALSE) %&gt;% \n  kable_classic() %&gt;%\n    row_spec(lastrow, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nTable 3.6: Top 10 Revenue Sources with CAGRs\n\n\n\n\nCAGR Calculations for Largest Revenue Sources\n\n\nRevenue Category\n27 Year CAGR\n10 Year CAGR\n5 Year CAGR\n3 Year CAGR\n2 Year CAGR\n1 Year CAGR\n\n\n\n\nCorporate Income Taxes\n5.01\n5.54\n13.84\n-11.48\n-18.56\n-16.23\n\n\nFederal Medicaid\n6.97\n6.97\n8.26\n2.62\n0.93\n-3.72\n\n\nFederal Other\n4.28\n6.45\n3.65\n-15.71\n3.30\n10.68\n\n\nFederal Transportation\n4.50\n3.04\n8.97\n14.34\n13.86\n16.11\n\n\nIndividual Income Taxes\n5.64\n6.59\n8.98\n4.44\n9.10\n10.03\n\n\nLottery Receipts\n2.10\n1.49\n4.77\n1.66\n-3.09\n-8.88\n\n\nMedical Provider Assessments\n8.33\n9.16\n6.29\n8.07\n7.36\n8.55\n\n\nMotor Fuel Tax\n3.08\n8.61\n4.96\n5.33\n7.22\n4.67\n\n\nMotor Vehicle And Operators\n2.95\n0.63\n2.38\n0.88\n1.33\n0.15\n\n\nPublic Utility Taxes\n0.79\n0.01\n0.74\n1.53\n1.18\n2.65\n\n\nReceipts From Revenue Producing\n5.74\n4.50\n8.61\n11.24\n12.65\n9.05\n\n\nSales Taxes\n3.17\n4.12\n6.35\n2.57\n1.46\n1.67\n\n\nAll Other Sources\n6.04\n6.98\n12.46\n8.79\n4.63\n-0.14\n\n\nTotal Revenue\n4.95\n5.90\n7.95\n0.60\n2.82\n2.64\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n###### Yearly change summary table for Top 10 Revenues #####\nrevenue_change_majorcats &lt;- rev_long_majorcats %&gt;%\n  #select(-c(Category)) %&gt;%\n  filter(Year &gt;= past_year |  Year == first_year) %&gt;%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %&gt;%\n    rename(    \n    Dollars_current = Dollars_2025,\n    Dollars_lastyear = Dollars_2024\n    )|&gt;\n  mutate(\n    \"Current FY ($ billions)\" = round(Dollars_current/1000, digits = 2),\n    \"Previous FY ($ billions)\" = round(Dollars_lastyear/1000, digits = 2),\n    \"FY 1998 ($ billions)\" = round(Dollars_1998/1000, digits = 2),\n    \"1-Year Change\" = percent((Dollars_current -Dollars_lastyear)/Dollars_lastyear, accuracy = .01),\n  )  %&gt;%\n  left_join(CAGR_revenue_majorcats_tot, by = c(\"Category_name\" = \"Revenue Category\")\n            ) %&gt;% \n  arrange(-`Current FY ($ billions)`)%&gt;%\n  mutate(`27 Year CAGR` = percent(`27 Year CAGR`/100, accuracy=.01)) %&gt;%\n  select(-c(Dollars_1998, Dollars_current, Dollars_lastyear, `1 Year CAGR`:`10 Year CAGR`\n            )) %&gt;%\n  rename(\"Revenue Category\" = Category_name )\n\nallother_row &lt;- which(grepl(\"All Other\", revenue_change_majorcats$`Revenue Category`))\n\nrevenue_change_majorcats &lt;- move_to_last(revenue_change_majorcats, allother_row) # Move \"All Other\" to 2nd to last row\n\ntotalrow &lt;- which(grepl(\"Total\", revenue_change_majorcats$`Revenue Category`))\nrevenue_change_majorcats &lt;- move_to_last(revenue_change_majorcats, totalrow) # Move \"Total\" to last row\n\nlastrow = nrow(revenue_change_majorcats)\n\nrevenue_change_majorcats%&gt;% \n  kbl(caption = \"Yearly Change in Revenue for Main Revenue Sources\", row.names = FALSE, align = \"l\") %&gt;% \n   kable_classic() %&gt;%\n    row_spec(lastrow, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nTable 3.7: Top 10 Revenue Sources with CAGRs\n\n\n\n\nYearly Change in Revenue for Main Revenue Sources\n\n\nRevenue Category\nCurrent FY ($ billions)\nPrevious FY ($ billions)\nFY 1998 ($ billions)\n1-Year Change\n27 Year CAGR\n\n\n\n\nIndividual Income Taxes\n30.13\n27.38\n6.85\n10.03%\n5.64%\n\n\nFederal Medicaid\n20.58\n21.38\n3.34\n-3.72%\n6.97%\n\n\nSales Taxes\n16.70\n16.43\n7.20\n1.67%\n3.17%\n\n\nFederal Other\n11.61\n10.49\n3.75\n10.68%\n4.28%\n\n\nCorporate Income Taxes\n6.95\n8.30\n1.86\n-16.23%\n5.01%\n\n\nMedical Provider Assessments\n4.71\n4.34\n0.54\n8.55%\n8.33%\n\n\nReceipts From Revenue Producing\n3.29\n3.01\n0.73\n9.05%\n5.74%\n\n\nMotor Fuel Tax\n2.95\n2.82\n1.30\n4.67%\n3.08%\n\n\nFederal Transportation\n2.74\n2.36\n0.84\n16.11%\n4.50%\n\n\nMotor Vehicle And Operators\n1.64\n1.64\n0.75\n0.15%\n2.95%\n\n\nPublic Utility Taxes\n1.48\n1.44\n1.19\n2.65%\n0.79%\n\n\nLottery Receipts\n1.46\n1.61\n0.83\n-8.88%\n2.10%\n\n\nAll Other Sources\n13.92\n13.94\n2.86\n-0.14%\n6.04%\n\n\nTotal Revenue\n118.16\n115.13\n32.03\n2.64%\n4.95%\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nn_categories &lt;- 9 + 1 # (Top 9 and then Total )\n\nexp_majorcats &lt;- exp_long |&gt; \n  filter(Year == current_year | Year == first_year\n         ) |&gt;\n  arrange(desc(Dollars)) |&gt;\n  slice(1:n_categories) # keep top 10 largest categories or categories larger than 2 billion for final table in report (not a set rule, changes each year depending what the focus of the report is or what is highlighted.)\n\n\nexp_long_majorcats &lt;- exp_long |&gt;\n  mutate(Category_name = ifelse(Category_name %in% exp_majorcats$Category_name, Category_name, \"All Other Expenditures **\"),\n         Category_name = ifelse(Category_name == \"Total\", \"Total Expenditures\", Category_name)) |&gt;\n  group_by(Year, Category_name) |&gt; \n  summarize(Dollars = sum(Dollars, na.rm=TRUE))\n\n# expenditure_wide_majorcats &lt;- exp_long_majorcats %&gt;% \n#   pivot_wider(names_from = Category_name, \n#               values_from = Dollars) %&gt;%\n#   relocate(\"All Other Expenditures **\", .after = last_col()) %&gt;%\n#   relocate(\"Total Expenditures\", .after =  last_col())\n\n\n\n# CAGR values for largest expenditure categories and combined All Other Expenditures\n\n\nCAGR_expenditures_majorcats_tot &lt;- cagr_calculations(exp_long_majorcats) |&gt;\n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %&gt;% \n  rename(\"Expenditure Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10,\"27 Year CAGR\" = cagr_max )\n\nallother_row &lt;- which(grepl(\"Other\", CAGR_expenditures_majorcats_tot$`Expenditure Category`))\n\nCAGR_expenditures_majorcats_tot &lt;- move_to_last(CAGR_expenditures_majorcats_tot, allother_row) # Move \"All Other\" to 2nd to last row\n\ntotalrow &lt;- which(grepl(\"Total\", CAGR_expenditures_majorcats_tot$`Expenditure Category`))\nCAGR_expenditures_majorcats_tot &lt;- move_to_last(CAGR_expenditures_majorcats_tot, totalrow) # Move \"Total\" to last row\n\nlastrow = nrow(CAGR_expenditures_majorcats_tot)\n\nCAGR_expenditures_majorcats_tot%&gt;%   \n  kbl(caption = \"CAGR Calculations for Largest Expenditure Categories\" , row.names=FALSE) %&gt;% \n     kable_classic()  %&gt;%\n    row_spec(lastrow, bold = T, color = \"black\", background = \"gray\")\n# Yearly change for Top n largest expenditure categories\nexpenditure_change_majorcats &lt;- exp_long_majorcats %&gt;%\n  filter(Year &gt;= past_year |\n           Year == first_year) %&gt;%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %&gt;%   \n  rename(    \n    Dollars_current = Dollars_2025,\n    Dollars_lastyear = Dollars_2024\n    )|&gt;\n  mutate(\"Current FY ($ Billions)\" = round(Dollars_current/1000, digits = 2),\n         \"Previous FY ($ Billions)\" = round(Dollars_lastyear/1000, digits = 2),\n         \"FY 1998 ($ Billions)\" = round(Dollars_1998/1000, digits = 2),\n         \"1-Year Change\" = percent((Dollars_current -Dollars_lastyear)/Dollars_lastyear, accuracy = .01),\n         )  %&gt;%\n left_join(CAGR_expenditures_majorcats_tot, by = c(\"Category_name\" = \"Expenditure Category\")) %&gt;% \n  arrange(-`Current FY ($ Billions)`)%&gt;%\n  mutate(`27 Year CAGR` = percent(`27 Year CAGR`/100, accuracy=.01)) %&gt;%\n  select(-c(Dollars_1998, Dollars_current, Dollars_lastyear, `1 Year CAGR`:`10 Year CAGR`\n            )) %&gt;%\n  rename(\n   # \"1-Year Change\" = `1 Year CAGR`,\n    \"27 Year Change\" = `27 Year CAGR`, \n          \"Expenditure Category\" = Category_name )\n\nallother_row &lt;- which(grepl(\"All Other\", expenditure_change_majorcats$`Expenditure Category`))\n\nexpenditure_change_majorcats &lt;- move_to_last(expenditure_change_majorcats, allother_row) # Move \"All Other\" to 2nd to last row\n\ntotalrow &lt;- which(grepl(\"Total\", expenditure_change_majorcats$`Expenditure Category`))\nexpenditure_change_majorcats &lt;- move_to_last(expenditure_change_majorcats, totalrow) # Move \"Total\" to last row\n\nlastrow = nrow(expenditure_change_majorcats)\n\nexpenditure_change_majorcats %&gt;% \n  kbl(caption = \"Yearly Change in Expenditures\", row.names = FALSE, align = \"l\") %&gt;% \n  kable_classic() %&gt;%\n    row_spec(lastrow, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nTable 3.8: Largest Expenditure Categories with CAGRs\n\n\n\n\nCAGR Calculations for Largest Expenditure Categories\n\n\nExpenditure Category\n27 Year CAGR\n10 Year CAGR\n5 Year CAGR\n3 Year CAGR\n2 Year CAGR\n1 Year CAGR\n\n\n\n\nChildren And Family Services\n1.11\n4.59\n7.18\n11.83\n5.36\n-2.37\n\n\nCorrections\n2.21\n2.53\n2.96\n5.82\n2.19\n-2.64\n\n\nDebt Service\n5.32\n-0.26\n0.16\n-0.78\n0.29\n-14.24\n\n\nHuman Services\n3.71\n5.95\n11.89\n13.07\n9.15\n0.49\n\n\nK-12 Education\n4.97\n5.33\n4.53\n2.13\n-0.68\n-4.33\n\n\nLocal Govt Revenue Sharing\n3.58\n3.65\n6.85\n-4.57\n-9.18\n-6.88\n\n\nMedicaid\n7.08\n7.30\n8.95\n6.10\n2.76\n2.33\n\n\nState Employee Healthcare\n6.26\n4.36\n4.76\n7.78\n11.95\n18.97\n\n\nTransportation\n4.55\n3.77\n9.98\n12.83\n11.37\n11.06\n\n\nUniversity Education\n2.91\n2.61\n4.10\n4.33\n3.07\n-1.12\n\n\nAll Other Expenditures **\n4.77\n4.16\n6.39\n3.12\n-2.30\n-1.31\n\n\nOther Departments\n8.04\n3.91\n6.91\n7.57\n-1.80\n5.31\n\n\nTotal Expenditures\n4.94\n5.10\n7.09\n4.73\n1.33\n-0.03\n\n\n\n\n\n\n\n\nYearly Change in Expenditures\n\n\nExpenditure Category\nCurrent FY ($ Billions)\nPrevious FY ($ Billions)\nFY 1998 ($ Billions)\n1-Year Change\n27 Year Change\n\n\n\n\nMedicaid\n34.22\n33.44\n5.40\n2.33%\n7.08%\n\n\nK-12 Education\n20.77\n21.71\n5.60\n-4.33%\n4.97%\n\n\nHuman Services\n10.52\n10.47\n3.93\n0.49%\n3.71%\n\n\nLocal Govt Revenue Sharing\n8.99\n9.66\n3.48\n-6.88%\n3.58%\n\n\nTransportation\n6.57\n5.91\n1.98\n11.06%\n4.55%\n\n\nUniversity Education\n4.96\n5.02\n2.28\n-1.12%\n2.91%\n\n\nState Employee Healthcare\n3.76\n3.16\n0.73\n18.97%\n6.26%\n\n\nOther Departments\n3.30\n3.14\n0.41\n5.31%\n8.04%\n\n\nDebt Service\n1.96\n2.29\n0.48\n-14.24%\n5.32%\n\n\nCorrections\n1.78\n1.83\n0.99\n-2.64%\n2.21%\n\n\nChildren And Family Services\n1.75\n1.79\n1.30\n-2.37%\n1.11%\n\n\nAll Other Expenditures **\n16.38\n16.60\n4.66\n-1.31%\n4.77%\n\n\nTotal Expenditures\n114.96\n115.00\n31.24\n-0.03%\n4.94%\n\n\n\n\n\n\n\n\n\n\nExport summary file with Totals\n\n\nCode\n#install.packages(\"openxlsx\")\nlibrary(openxlsx)\n\n#aggregated_totals_majorcats = rbind(rev_long, exp_long)\n\ntodaysdate = Sys.Date()\ndataset_names &lt;- list(#'Aggregate Revenues' = revenue_wide2, \n                      #'Aggregate Expenditures' = expenditure_wide2, \n\n                      \n                      'Table 1' = revenue_change_majorcats, #Top categories with yearly change, 23 yr cagr\n                      'Table 2' = expenditure_change_majorcats,\n                      \n                      'Appendix 1' = revenue_change2,\n                      'Appendix 2' = expenditure_change2,\n                      \n                      'CAGR Rev-MajorCats' = CAGR_revenue_majorcats_tot, # Categories Match Table 1 in paper\n                      'CAGR Exp-MajorCats' = CAGR_expenditures_majorcats_tot,  \n                                            \n                      'Fiscal Gap' = year_totals,    # Total Revenue, Expenditure, and Fiscal gap per year\n                      \n                      'aggregated_totals_long' = aggregated_totals_long#, # all data in long format. Good for creating pivot tables in Excel\n                      \n                   #   'aggregated_fewercategories' = aggregated_totals_majorcats # combines categories that have small amounts into \"All Other\" category\n                      )\n\n# no pension categories included as separate cateogry (except for specific pension repayments that happened in some years.) \n# pension costs are included with K-12 education, university education, etc\nwrite.xlsx(dataset_names, file = paste0(\"data/FY\", current_year, \" Files/summary_file_FY\", current_year,\"_pensionsdissolved_\", todaysdate, \".xlsx\"))\n\n\nSaves main items in one excel file named summary_file.xlsx. Delete eval=FALSE to run on local computer.",
    "crumbs": [
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Pension Costs Included within Department Expenditures</span>"
    ]
  },
  {
    "objectID": "OwnSourceRev.html",
    "href": "OwnSourceRev.html",
    "title": "2  Own Source Revenue",
    "section": "",
    "text": "2.1 Income Taxes\nIncome taxes include Individual income taxes and corporate income taxes.\nFigure 2.1: Break down of ALL Income Tax\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.2: Break down of ALL Income Tax",
    "crumbs": [
      "Illinois State Budget Data",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Own Source Revenue</span>"
    ]
  },
  {
    "objectID": "OwnSourceRev.html#income-taxes",
    "href": "OwnSourceRev.html#income-taxes",
    "title": "2  Own Source Revenue",
    "section": "",
    "text": "Code\nrev_temp  %&gt;% \n  filter(rev_type == \"03\" | rev_type == \"02\") %&gt;%\n  mutate(label = if_else(fy == max(fy), as.character(source_name_AWM), NA_character_)) %&gt;%\n  group_by(fy, source, source_name_AWM, label) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot(aes(x=fy, y=receipts/1000000000, color = source_name_AWM)) + \n  geom_line() + \n  geom_text(aes(label = label)) +\n    theme(legend.position = \"bottom\" ,\n                   plot.margin = margin(0, 4, 0, 0, \"cm\")) +\n\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"All Income Tax by Revenue Source\", \n       y = \"Billions of Nominal Dollars\")  +\n    coord_cartesian(clip = 'off', expand = TRUE)\n\n\nrev_temp  %&gt;% \n  filter(rev_type == \"03\") %&gt;%\n  mutate(label = if_else(fy == max(fy), as.character(fund_name_ab), NA_character_)) %&gt;%\n  group_by(fy, fund_name_ab, label) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot(aes(x=fy, y=receipts/1000000000, color = fund_name_ab)) +\n  geom_line() + \n    geom_text_repel(aes(label = label),   \n              hjust = 0, \n            direction = \"y\",\n              segment.linetype = \"dotted\",\n            xlim = c(current_year + .5, NA)\n              ) +\n  theme_classic() +\n  \n  theme(legend.position = \"none\",\n                   plot.margin = margin(0, 3, 0, 0, \"cm\")\n        ) +\n    coord_cartesian(clip = 'off') +\n  \n  scale_x_continuous(expand = c(0,0), limits = c(1998, current_year+.5), breaks = c(1998, 2005, 2010, 2015, 2020, current_year)) +\n  scale_y_continuous(labels = comma) +\n\n  labs(title = \"All Income Tax Money by Receiving Fund\", \n       y = \"Billions of Nominal Dollars\") \n\n\n\n2.1.0.1 Individual Income Tax\n\nCode\nrev_temp  %&gt;% \n  filter(rev_type == \"02\") %&gt;%\n  group_by(fy, source, source_name_AWM) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + \n  geom_line(aes(x=fy, y=receipts/1000000000, color = source_name_AWM)) + \n#  scale_x_continuous(expand = c(0,0)) +\n    scale_x_continuous(expand = c(0,0), limits = c(1998, current_year+.5), breaks = c(1998, 2005, 2010, 2015, 2020, current_year)) +\n\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Individual Income Tax  Breakdown\", subtitle = \"Revenue sources for rev_type == 02\",\n       y = \"Billions of Nominal Dollars\") \n\n\nrev_temp  %&gt;% \n  filter(rev_type == \"02\") %&gt;%\n  group_by(fy, fund_name_ab) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + \n  geom_line(aes(x=fy, y=receipts/1000000000, color = fund_name_ab)) + \n # scale_x_continuous(expand = c(0,0)) +\n    scale_x_continuous(expand = c(0,0), limits = c(1998, current_year+.5), breaks = c(1998, 2005, 2010, 2015, 2020, current_year)) +\n\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Individual Income Tax  Breakdown\", \n       subtitle = \"Funds receiving rev_type == 02\",\n       y = \"Billions of Nominal Dollars\")\n\n\n\n\n\n\n\nFigure 2.3: Break down of Individual Income Tax\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.4: Break down of Individual Income Tax\n\n\n\n\n\n\n\n\n\n\n\n2.1.0.2 Corporate Income Tax\n\nCode\nrev_temp  %&gt;% \n  filter(rev_type == \"03\" ) %&gt;%\n  group_by(fy, source, source_name_AWM) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + \n  geom_line(aes(x=fy, y=receipts/1000000000, color = source_name_AWM)) + \n  scale_x_continuous(expand = c(0,0), limits = c(1998, current_year+.5), breaks = c(1998, 2005, 2010, 2015, 2020, current_year)) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Corporate Income Tax  Breakdown\", \n       subtitle = \"Corporate Income Taxes include money transfered straight to local governments and funds saved for tax refunds.\",\n       y = \"Billions of Nominal Dollars\") \n\nrev_temp  %&gt;% \n  filter(rev_type == \"03\") %&gt;%\n  group_by(fy, fund_name_ab) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + \n  geom_line(aes(x=fy, y=receipts/1000000000, color = fund_name_ab)) + \n  scale_x_continuous(expand = c(0,0), limits = c(1998, current_year+.5), breaks = c(1998, 2005, 2010, 2015, 2020, current_year)) +\n  scale_y_continuous(labels = comma) +\n\n  labs(title = \"Corporate Income Tax Breakdown\", \n       subtitle = \"Corporate Income Taxes include money transfered straight to local governments and funds saved for tax refunds.\",\n       y = \"Billions of Nominal Dollars\")\n\n\n\n\n\n\n\nFigure 2.5: Break down of Corporte Income Tax\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.6: Break down of Corporte Income Tax\n\n\n\n\n\n\n\n\n\n\n\n2.1.0.3 PPRT\n\n\nCode\nrev_temp |&gt; \n\n  filter(\n    source_name_AWM != \"PERS PROP REPL TAX AMNESTY\" & (\n          source_name_AWM  == \"INDIV. INCOME TAX PASS-THROUGH\" |\n\n    source_name == \"CORPORATE\" | \n         source_name == \"PERS PROP REPLACE\" | \n           source_name == \"PPRT-PERSON PROP TAX REPLACE\"#|\n          # fund_name_ab == \"PERSONAL PROPERTY TAX REPLACE\" \n    ) \n    ) |&gt;\n  group_by(fy, source_name_AWM) |&gt; summarize(rev = sum(receipts)) |&gt;\n  ggplot() +\n  geom_col(aes(x=fy, y = rev, fill = source_name_AWM), position = \"stack\") +\n  scale_y_continuous(labels = scales::dollar) +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nrev_temp |&gt; \n\n  filter(\n    source_name_AWM != \"PERS PROP REPL TAX AMNESTY\" & (\n          source_name_AWM  == \"INDIV. INCOME TAX PASS-THROUGH\" |\n\n    source_name == \"CORPORATE\" | \n         source_name == \"PERS PROP REPLACE\" | \n           source_name == \"PPRT-PERSON PROP TAX REPLACE\"#|\n          # fund_name_ab == \"PERSONAL PROPERTY TAX REPLACE\" \n    ) \n    ) |&gt;\n  group_by(fy, fund_name_ab) |&gt; summarize(rev = sum(receipts)) |&gt;\n  ggplot() +\n  geom_col(aes(x=fy, y = rev, fill = fund_name_ab), position = \"stack\") +\n  scale_y_continuous(labels = scales::dollar) +\n  theme(legend.position = \"bottom\")",
    "crumbs": [
      "Illinois State Budget Data",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Own Source Revenue</span>"
    ]
  },
  {
    "objectID": "OwnSourceRev.html#sales-tax",
    "href": "OwnSourceRev.html#sales-tax",
    "title": "2  Own Source Revenue",
    "section": "2.2 Sales Tax",
    "text": "2.2 Sales Tax\n\nCode\nrev_temp  %&gt;% \n  filter(rev_type == \"06\" ) %&gt;%\n  group_by(fy, source, source_name_AWM) %&gt;% \n  summarize(receipts = round(sum(receipts))) %&gt;% \n  pivot_wider(names_from = \"fy\", values_from = \"receipts\")\nrev_temp  %&gt;% \n  filter(rev_type == \"06\" ) %&gt;%\n  group_by(fy, source, source_name_AWM) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + \n  geom_line(aes(x=fy, y=receipts/1000000000, color = source_name_AWM)) + \n  scale_x_continuous(expand = c(0,0), limits = c(1998, current_year+.5), breaks = c(1998, 2005, 2010, 2015, 2020, current_year)) +\n  scale_y_continuous(labels = comma) +\n  theme(legend.position = \"bottom\") +\n   theme(legend.position = \"none\") +\n\n  labs(title = \"Sales Tax Breakdown\", \n       y = \"Billions of Nominal Dollars\") \n\nrev_temp  %&gt;% \n  filter(rev_type == \"06\" & fy &gt; 2015) %&gt;%\n  group_by(fy, fund_name_ab) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + \n  geom_line(aes(x=fy, y=receipts/1000000000, color = fund_name_ab)) + \n  #geom_text(data = annotation, aes(x=x, y=y, label=label)) +\n  scale_x_continuous(expand = c(0,0), limits = c(1998, current_year+.5), breaks = c(1998, 2005, 2010, 2015, 2020, current_year)) +\n  scale_y_continuous(labels = comma) +\n # scale_linetype_manual(values = c(\"dotted\", \"dashed\", \"solid\")) +\n  theme(legend.position = \"bottom\") +\n  #  theme(legend.position = \"none\") +\n\n  labs(title = \"Sales Tax Breakdown\", \n       #subtitle = \"Sales Taxes include money transfered straight to local governments and funds saved for tax refunds.\",\n       y = \"Billions of Nominal Dollars\")\n\n\n\n\n\n\n\nFigure 2.7: Break down of Sales Tax. Sales Taxes include money transfered straight to local governments and funds saved for tax refunds.\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.8: Break down of Sales Tax. Sales Taxes include money transfered straight to local governments and funds saved for tax refunds.\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.9: Break down of Sales Tax. Sales Taxes include money transfered straight to local governments and funds saved for tax refunds.\n\n\n\n\n\n\n\n\n\n\n2.2.1 Online retailers\n\n\n\n\n\n\n\nWarning\n\n\n\nOnline Retailer Warning\nNot edited or double checked. Randomly looked into online retailers recently and didn’t finish thoughts on it. Just general notes pulled together while looking into online sales tax.\n\n\n\nLaw was passed in 2018 that required out of state retailers to pay the 6.25% state sales tax. The Rebuild Illinois law expanded the law to require remote retailers to charge all state and local retailers occupation taxes beginning in July 1, 2020. Before Jan. 1 2021, only state sales taxes were required to be collected (related to South Dakota v Wayfair court decision). Now required to pay state and local tax based on where product is delivered.\n“On June 28, 2019, Public Act 101-0031, the”Leveling the Playing Field for Illinois Retail Act,” was signed into Illinois law and on December 13, 2019 an amendment to the Act was signed into law in Public Act 101-0604. In an effort to create more equity between remote sellers and local brick-and-mortar retailers, the new law requires remote sellers without a physical presence in the state and marketplace facilitators (e.g., Amazon and Walmart) to collect both state and local sales taxes effective January 1, 2021.” CivicFed.org\nRequires remote sellers and marketplace facilitators to collect and remit the state and locally-imposed Retailers’ Occupation Tax (ROT) for the jurisdictions where the product is delivered (destination sourcing) rather than collecting and remitting solely the state use tax. \n\n\n\nIllinois’ State sales tax rate is 6.25%, of which 5.0% of the sales tax revenue goes to the State, 1.0% goes to all municipalities, including Chicago, and the remaining 0.25% goes to the counties. However, Cook County’s 0.25% share of the State sales tax is distributed to the Regional Transportation Authority.\n“The amended”Leveling the Playing Field for Illinois Retail Act” was passed by the General Assembly on November 14, 2019, to require both Remote Retailers and Marketplace Facilitators to collect and remit the state and locally-imposed Retailers’ Occupation Tax (ROT, aka sales tax) for the jurisdictions where the product is delivered (its destination) starting January 1, 2021.”- Illinois Municipal League\n\nMarketplace Facilitators, like Amazon, were required to collect Use Tax on sales starting January 1, 2020\nOther sellers required to collect state and local sales tax on sales on January 2021.\nThere is a state tax rate of 6.25% and Illinois municipalities may impose an additional local sales tax called the Retailer’s Occupation Tax.\n\nFor remote sellers, the state tax rate is referred to as “use tax” and for intrastate sellers, “ROT” simply means sales tax.  \nThe ROT is measured upon the seller’s gross receipts and the seller is statutorily required to collect the use tax from their customers.\n\nsource 0482 is State ROT-2.2%\n\nILGA info - leveling the playing field went into effect on July 1 2020 which is the beginning of FY21\n\n\nCode\n## State Retailers Occupation Tax. \nrev_temp %&gt;% filter(source == \"0481\") %&gt;%\n  group_by(fy, source_name_AWM) %&gt;% summarize(revenue=sum(receipts))\n\n\n\n\nFigure 2.10: Leveling the Playing Field went into effect for Amazon on January 1, 2020(mid-FY21) and for other remote retailers starting January 1, 2021 (mid-FY22)\n\n\n\n\n\n\n\n\n\nCode\nrev_temp %&gt;% \n  filter(source == \"0481\") %&gt;%\n  group_by(fy, source_name_AWM, fund_name_ab) %&gt;% \n  summarize(revenue=sum(receipts))%&gt;%\n  arrange(-fy, -revenue)%&gt;%\n  pivot_wider(names_from = \"fy\", values_from=\"revenue\")\n\n\n\n\nFigure 2.11: Leveling the Playing Field went into effect for Amazon on January 1, 2020(mid-FY21) and for other remote retailers starting January 1, 2021 (mid-FY22)\n\n\n\n\n\n\n\n\n\nCode\nrev_temp %&gt;% \n  filter(source == \"0481\") %&gt;%\n  ggplot(aes(x=fy, y=receipts))+\n  geom_line(aes(color=fund_name_ab))+\n  geom_vline(xintercept = 2018)+\n  geom_vline(xintercept = 2021)+\n  scale_x_continuous(expand = c(0,0), limits = c(1998, current_year+.5), breaks = c(1998, 2005, 2010, 2015, 2020, current_year)) +\n  labs(title=\"State Retailers' Occupation Tax, Source 0481\")\n\n\n\n\n\nFigure 2.12: Leveling the Playing Field went into effect for Amazon on January 1, 2020(mid-FY21) and for other remote retailers starting January 1, 2021 (mid-FY22)\n\n\n\n\n\n\n\n\n\n\nState tax began being collected for remote retailers based on destination beginning in Leveling the Playing Field went into effect for Amazon on January 1, 2020 (mid-FY21) and for other remote retailers starting January 1, 2021 (mid-FY22).\n\n\nCode\n### Remote Occupation Tax\n# STATE ROT-2.2%\nrev_temp %&gt;% \n  filter(source == \"0482\") %&gt;%\n  group_by(fy, source_name_AWM) %&gt;% \n  summarize(revenue=sum(receipts))\nrev_temp %&gt;% \n  filter(source == \"0482\") %&gt;%\n  group_by(fy, source_name_AWM, fund_name_ab) %&gt;% \n  summarize(revenue=sum(receipts))%&gt;%\n  arrange(-fy, -revenue)%&gt;%\n  pivot_wider(names_from = \"fy\", values_from=\"revenue\")\n\n\n\n\nTable 2.1: Remote Occupation Tax: State ROT\n\n\n\n\n  \n\n\n\n\n  \n\n\n\n\n\n\n\nCode\nrev_temp %&gt;% \n  filter(source == \"0482\") %&gt;%\n  ggplot(aes(x=fy, y=receipts))+\n  geom_line(aes(color=fund_name_ab))+\n  geom_vline(xintercept = 2018)+\n  geom_vline(xintercept = 2020)+\n  scale_x_continuous(expand = c(0,0), limits = c(1998, current_year+.5), breaks = c(1998, 2005, 2010, 2015, 2020, current_year)) +\n  labs(title=\"State Retailers' Occupation Tax\")\nrev_temp %&gt;% \n  filter(source == \"0482\") %&gt;%\n  group_by(fy, source_name_AWM, fund_name_ab) %&gt;% \n  summarize(revenue=sum(receipts))  %&gt;% \n  ggplot()+\n  geom_line(aes(x=fy, y=revenue, color=fund_name_ab))+\n  geom_vline(xintercept = 2018) +\n  geom_vline(xintercept = 2021) +\n  scale_x_continuous(expand = c(0,0), limits = c(1998, current_year+.5), breaks = c(1998, 2005, 2010, 2015, 2020, current_year)) +\n  labs(title=\"State ROT - 2.2%\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nrev_temp %&gt;% \n  filter(source == \"0482\" | source == \"0481\") %&gt;%\n  group_by(fy, source_name_AWM) %&gt;% \n  summarize(revenue=sum(receipts))  %&gt;% \n  ggplot()+\n  geom_line(aes(x=fy, y=revenue, color=source_name_AWM))+\n  geom_vline(xintercept = 2018)+\n  geom_vline(xintercept = 2021)+\n  scale_x_continuous(expand = c(0,0), limits = c(1998, current_year+.5), breaks = c(1998, 2005, 2010, 2015, 2020, current_year)) +\n  labs(title=\"State ROT - 2.2% & \",\n       subtitle = \"Large increases due to Leveling the Playing Field Act & Online shopping during pandemic??\")\n\n\n\n\n\nFigure 2.13: Large increases due to Leveling the Playing Field Act & Online shopping during pandemic. Leveling the Playing Field went into effect for Amazon on January 1, 2020(mid-FY21) and for other remote retailers starting January 1, 2021 (mid-FY22)\n\n\n\n\n\n\n\n\nAs of Feb. 6 2023, Source 481 Retailers Occupation Tax has collected $9.3 billion already. FY22 had $14.7 million. Around half goes to the General Revenue Fund.\n\n\nCode\nrev_temp  %&gt;% \n  filter(rev_type == \"03\" | \n          rev_type == \"02\" | \n           rev_type == \"06\") %&gt;%\n  filter(!str_detect(source_name_AWM, \"PPRT\") & !str_detect(fund, \"REFUND\")) %&gt;%\n\n  group_by(fy, source, source_name_AWM) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + # aes(x=fy, y=receipts/1000, group = source))+\n  geom_recessions(text = FALSE)+\n  geom_line(aes(x=fy, y=receipts/1000000000, color = source_name_AWM)) + \n  #geom_text(data = annotation, aes(x=x, y=y, label=label)) +\n  scale_x_continuous(expand = c(0,0), limits = c(1998, current_year+.5), breaks = c(1998, 2005, 2010, 2015, 2020, current_year)) +\n  scale_y_continuous(labels = comma) +\n scale_linetype_manual(values = c(\"dotted\", \"dashed\", \"solid\")) +\n  theme(legend.position = \"none\") +\n  labs(title = \"What the State Actually Gets to Keep\", \n       subtitle = \"Tax Revenue collected by the State minus (refund fund $ & Local Transfers)\",\n       y = \"Billions of Nominal Dollars\") \n\n\n\n\n\n\n\n\n\n\n\nCode\nrev_temp  %&gt;% \n  filter(rev_type == \"03\" | \n           rev_type == \"02\" | \n           rev_type == \"06\") %&gt;%\n  filter(!str_detect(source_name_AWM, \"PPRT\") & !str_detect(fund, \"REFUND\")) %&gt;%\n\n  group_by(fy,\n           rev_type\n           # source, source_name_AWM\n           ) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + # aes(x=fy, y=receipts/1000, group = source))+\n  geom_line(aes(x=fy, y=receipts/1000000000,\n                group = rev_type, color=rev_type\n                ) )+ \n  scale_x_continuous(expand = c(0,0), limits = c(1998, current_year+.5), breaks = c(1998, 2005, 2010, 2015, 2020, current_year)) +\n  scale_y_continuous(labels = comma) +\n\n  theme(legend.position = \"bottom\") +\n  labs(title = \"What the State Actually Gets to Keep\", \n       subtitle = \"Tax Revenue collected by the State minus (refund fund $ & Local Transfers)\",\n       y = \"Billions of Nominal Dollars\")",
    "crumbs": [
      "Illinois State Budget Data",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Own Source Revenue</span>"
    ]
  },
  {
    "objectID": "FundsIncluded.html",
    "href": "FundsIncluded.html",
    "title": "3  An All Funds Approach",
    "section": "",
    "text": "3.1 Including or Excluding funds in the Fiscal Futures All Funds Budget\nWhile it is called an “All Funds” Budget, that is a slight exaggeration. Illinois has over 700 funds. Whereas the overwhelming majority are included in our “All Funds” measure, some are not.  The starting point for our list of all funds is all appropriated funds, but, for the reasons listed below, we exclude a handful of appropriated funds and include a number of non-appropriated funds.1\nPreliminary expenditure and revenue data is requested after the Fiscal Year ends, and the requested again at the end of the lapse period.2 Calculations are based off the values received from the data received after October 31st when Illinois’ lapse period ends.\nCriterion 1: INCLUDE IF the fund collects a state-levied tax.\nThe state collects both state-levied taxes and locally levied taxes (typically local-option sales and utility taxes).  The state collects and returns local taxes to the local governments.  Upon receipt, local tax revenues are deposited into specifically-designated, non-appropriated state trust funds.  In cases where the state is solely acting as a collection agent for a local taxing body, this receiving trust fund, its revenue and distribution (expenditure) is NOT counted in our analytical frame.  If the tax is collected for the state, the fund and its revenue IS counted in our analytical frame.\nCriterion 2:  INCLUDE IF the fund supports a state function.\nNon-appropriated funds may support state functions such as education, social services, transportation, public facilities, regulation, natural resources, and law enforcement.  Generally these are trust funds that hold federal dollars for a specified state project or purpose.  This category of non-appropriated funds is essentially the same as a large group of appropriated state and federal trust funds.  Because we are counting federal dollars as revenue, it would be inconsistent to count the appropriated funds, but not the non-appropriated funds that do essentially the same thing.\nCriterion 3:  EXCLUDE IF the fund is a holding fund for individuals.\nMany funds are used to hold monies that belong to individuals, not the state.  Most of these funds are non-appropriated, but some are appropriated.  Examples of appropriated funds that we exclude from the frame are child support collection funds or employee pension own-contribution funds.  These funds are holding money that belongs to an individual and will be returned to the person, or used for a payment on behalf of that person, at a later date.\nCriterion 4:  EXCLUDE IF the fund’s expenditures or revenues have been counted elsewhere (i.e., avoid double-counting).\nIn some cases, funds receive and disburse money that was already counted as revenues to or expenditures from other funds.  For example, the Commercial Consolidation Fund is a huge fund that distributes state benefit payments to individuals, service providers, and local governments by direct deposit.  Payments into this fund are counted, distributions from this fund are not.\nCriterion 5:  EXCLUDE IF the fund holds designated user fees targeted for a specific purpose that is not a public function (conduit).\nTypically we have excluded non-appropriated funds that hold designated user fees that are directed to a specific purpose that is not a necessary public function.  These funds can be considered a conduit and we did not add these to the frame.  For example, we exclude Fund 0098, which collects fees from harness race entrants at the state fair and then pays them out to race winners.\nCriterion 6:  INCLUDE IF the fund collects a user fee that supports a large, important state function (state function trumps user fee).\nNon-appropriated funds that are supported by user fees AND perform a state function (e.g., transportation) ARE counted in the frame.  The rationale for this is that the state function would have to be performed even if the user fee and the fund structure did not exist.  The biggest example is the Illinois State Toll Highway Revenue Fund, which collects tolls and supports the expansion and maintenance of Illinois toll roads.\nCriterion 7:  EXCLUDE IF unclear information, dead fund, small amounts. Some funds are defunct, and our historical information on fund descriptions does not include pre-2005 designations. Fund numbers are re-used, making it impossible to determine the original purpose of some older, defunct funds.  These funds generally appear to be very small.  Because we are projecting forward from the most recently completed fiscal year, we assumed that these funds would not be in the frame.\nCode\nfunds &lt;- read_xlsx(\"inputs/funds_ab_in.xlsx\")\n\ntable &lt;- funds %&gt;% select(fund_ioc, fund, fund_name_ab, in_ff)\n\ndatatable(\n  table, rownames = FALSE,\n  colnames = c('IOC Fund Number' = 'fund_ioc', 'Recoded Fund Number'='fund',  \n               'Fund Name' = 'fund_name_ab', 'Included in Gap Calculation' = 'in_ff' ),\n  #caption = \"Table 1: Past and Present IOC Fund Numbers and Names\", \n  options = list(iDisplayLength = 50, dom = 'Blfrtip',\n                 buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),\n                 lengthMenu = list(c(10,30, 50, -1), \n                                   c('10', '30', '50', 'All')),\n                 paging = T),\n  extensions = 'Buttons'\n  \n)\n\n\n\n\nTable 3.1: Past and Present IOC Fund Numbers and Names",
    "crumbs": [
      "Methodology",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>An All Funds Approach</span>"
    ]
  },
  {
    "objectID": "FundsIncluded.html#footnotes",
    "href": "FundsIncluded.html#footnotes",
    "title": "3  An All Funds Approach",
    "section": "",
    "text": "Fiscal Futures Project Documentation. (2016). Institute of Government and Public Affairs, University of Illinois System. https://igpa.uillinois.edu/fiscal-futures-project-documentation/. Last document posted online. Updated by Richard Dye.↩︎\n“Closed” year:  accounts have been reconciled and reported as final.\n“Lapse period:”  June 30 fiscal year end date has passed, but books remain open 3-6 months to settle obligations.\n“Open” year:  accounts are still subject to revision and reconciliation (includes lapse period).\n“Current” year: fiscal year has begun (July 1) but not yet ended (June 30).\n“Upcoming” year: next fiscal year for which have actual or proposed appropriations and official revenue estimates.\n“Projection” year: future years for which model is used to project expenditure and revenue by category. ↩︎",
    "crumbs": [
      "Methodology",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>An All Funds Approach</span>"
    ]
  },
  {
    "objectID": "code-cleaning.html",
    "href": "code-cleaning.html",
    "title": "4  Gathering and Cleaning Data!",
    "section": "",
    "text": "Information for the Fiscal Futures all funds database comes from detailed information provided by the Illinois Comptroller’s office.  Currently the database includes 300,000 individual records for fiscal years 1998 to 2025.\n\nDo the FOIA request. In a week or so, they send the expenditure and revenue data as excel files.\nChecks whether there are any new agencies, re-used funds etc. Create a list of funds, agencies, fund names, etc. for the new year and compare it to the immediate prior year to identify new funds.\nUpdate the funds_ab_in file which shows the use of funds. Use criteria to determine if the new funds should be in or out of the all-funds frame.\nChange the variable names to be consistent with other files such as AGENCYNAME –&gt; agency_name\nOnce variable names are shared over all years of data, combine past years with newest year. All revenue files are in a `revenue` folder that I reference when I set the working directory. When adding new fiscal years, put the the newest year of data for revenue and expenditures in their respective folders.\n\nNormally, when your receive the new fiscal year files from the Comptrollers office, you will need to change the variable names so that they are consistent with past years. This is an example of reading in the new file and changing the variable names. They seem to change almost every year in the file received from the FOIA so if the code breaks here, check to make sure that the columns you are trying to rename exist and are spelled correctly! Once variables are the same, you will want to save the file as a csv file in its Revenue/Expenditure file and bind all past years and the current year together in one dataframe.\n\n#Example code below: Read in excel file and rename columns so that it plays well with the other years' files.\n# \n# revenue_fy23 &lt;- read_xlsx(\"Fis_Fut_Rev_2023_Final.xlsx\") %&gt;% \n#   rename(fy = 'FY',\n#          fund = 'FUND',\n#          fund_name = 'FUND NAME',\n#          agency = 'AGENCY',\n#          agency_name = 'AGENCY NAME',\n#          source = 'REVENUE SOURCE',\n#          source_name = 'REV SRC NAME',\n#          receipts = 'AMOUNT'\n#   ) \n# \n# exp_fy23 &lt;- read_xlsx(\"Fis_Fut_Exp_2023_Final.xlsx\") %&gt;% \n#   rename(fy = 'FY',\n#          fund = 'FUND',\n#          fund_name = 'FUND NAME',\n#          agency = 'AGENCY',\n#          agency_name = 'AGENCY NAME',\n#          appr_org = 'ORGANIZATION',\n#          org_name = 'ORGANIZATION NAME',\n#          obj_seq_type = 'APPROPRIATION',\n#          wh_approp_name = 'APPROPRIATION NAME',\n#         # exp_net_xfer = 'NET OF TRANS AMOUNT',\n#          expenditure = 'EXPENDED'\n# \n#   )\n\n\n\nCode\nrev_variable_names &lt;- read_xlsx(\"inputs/ioc_data_received/revenue/Fis_Fut_Rev_2025_Final.xlsx\") |&gt; names()\n\nrev_variable_names\n## New files had different variable names!! \n## Had to update code slightly ## \nrev_current &lt;- read_xlsx(\"inputs/ioc_data_received/revenue/Fis_Fut_Rev_2025_Final.xlsx\") %&gt;% \n  rename(fy = 'FISCAL YEAR',\n         fund = 'FUND',\n         fund_name = 'FUND NAME',\n         agency = 'AGENCY',\n         agency_name = 'AGENCY NAME',\n         source = 'REVENUE SOURCE',\n         source_name = 'REV SRC NAME',\n         receipts = 'AMOUNT'\n  )  %&gt;% mutate(data_source = \"rev IOC 07.16.2025\")\n\n\n\nexp_variable_names &lt;- read_xlsx(\"inputs/ioc_data_received/expenditures/Fis_Fut_Exp_2025.xlsx\") |&gt; names()\nexp_variable_names\n# some variable names in the excel file received change\n# check each year during preliminary and final datasets \n# can't bind rows unless columns match\nexp_current &lt;- read_xlsx(\"inputs/ioc_data_received/expenditures/Fis_Fut_Exp_2025.xlsx\") %&gt;% \n  rename(fy = 'FISCAL YEAR',\n         fund = 'FUND',\n         fund_name = 'FUND NAME',\n         agency = 'AGENCY',\n         agency_name = 'AGENCY NAME',\n         appr_org = 'ORGANIZATION',\n         org_name = 'ORGANIZATION NAME',\n         obj_seq_type = 'APPROPRIATION',\n         wh_approp_name = 'APPROPRIATION NAME',\n         appn_net_xfer = 'APPROPRIATED AMOUNT',\n         expenditure = 'EXPENDED AMOUNT') %&gt;%\n  mutate( data_source = \"exp IOC 07.16.2025\"\n  )  |&gt; \n  select(fy, fund, fund_name, agency, agency_name, appr_org, org_name, obj_seq_type, wh_approp_name, appn_net_xfer, expenditure, data_source)\n\n\n\n\nCode below reads in the csv files created in chunks above using (allrevfiles.csv and allrexpfiles.csv). These files contain all years of data combined into one file BEFORE any recoding is done. Do not use this file for summing categories because it is just an inbetween step before recoding revenue and expenditure categories. It also does not contain changes in funds or agencies.\n\n\nCode\n#\nallrevfiles_past &lt;- read_csv(paste0(\"data/FY\", past_year, \" Files/allrevfiles_\", past_year, \".csv\"))\n\n# add in excel file for current year\nallrevfiles_current &lt;- allrevfiles_past %&gt;% \n  select(fy, fund, fund_name, agency, agency_name, source, source_name, receipts, data_source) %&gt;% \n  rbind(rev_current)\n\n\n#Fy21: 62294 observations, 13 variables\n#FY22: 65094 obs, 13 vars\n#FY23: 57822 obs\n#fy24: 70,492 obs\n# fy25: #73,253 obs\n\nallexpfiles_past &lt;- read_csv(paste0(\"data/FY\", past_year, \" Files/allexpfiles_\", past_year, \".csv\"))\n\n# add in excel file for current year\nallexpfiles_current &lt;- allexpfiles_past %&gt;% \n  select(fy, fund, fund_name, agency, agency_name, appr_org, org_name, obj_seq_type, wh_approp_name, appn_net_xfer, expenditure, data_source) %&gt;% \n  rbind(exp_current)\n\n# fy21 213372 observations, 20 variables\n# fy22 225587 obs, 21 vars.\n# fy23 238089 obs\n# fy24 250,411 obs\n# fy25 262,837 obs\n\nwrite_csv(allrevfiles_current, paste0(\"data/FY\", current_year, \" Files/allrevfiles_\", current_year, \".csv\"))\n\nwrite_csv(allexpfiles_current, paste0(\"data/FY\", current_year, \" Files/allexpfiles_\", current_year, \".csv\"))\n\n\n\n\nCode\n# combined in past chunks called add-newest-years-data\n\nallrevfiles &lt;- read_csv(paste0(\"data/FY\", current_year, \" Files/allrevfiles_\", current_year, \".csv\") ) #combined but not recoded\n\nallexpfiles &lt;- read_csv(paste0(\"data/FY\", current_year, \" Files/allexpfiles_\", current_year, \".csv\")) #combined but not recoded\n\n\n\n4.0.1 Example of Inspecting New Fiscal Year data files\nData files for closed years have been obtained from IOC. The numbers of funds, agencies, organizations, and revenue sources below were found by using pivot tables in the codebook files in the FY2022 Box folder. This could also be done using R and grouping new files by fund, agency, source number, source names, etc..\n\n\n4.0.2 Finding new agencies and funds\nGeneral steps:\n\nIdentify new and reused funds for newest fiscal year.\nRecode funds to take into account different fund numbers/names over the years. See [Recoding New and Reused Funds] for code chunk that does this.\nUpdate inputs/funds_ab_in.xlsx with any changes from previous fiscal year.\n\n\n4.0.2.1 Expenditure Data\nNew Agencies, Funds, and Organizations from Expenditure files:\n\n\nCode\ncur_fy  &lt;- 2025  # Create variable for current fiscal year to save time for updating in future years.\n\n\n#### From Expenditure Data #####\n\n# agencies referenced in any year before current year:\nagencies_past &lt;- allexpfiles %&gt;% \n  filter(fy &lt; cur_fy) %&gt;% \n  mutate(agency == as.character(agency)) %&gt;% \n  group_by(agency, agency_name) %&gt;% unique() %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %&gt;% \n  drop_na() %&gt;% \n  arrange(agency)\n# agencies_past # 148 agencies ever\n\n\n# agencies in current year data:\nagencies &lt;- allexpfiles  %&gt;% \n  filter(fy == cur_fy) %&gt;% \n  mutate(agency == as.character(agency)) %&gt;% \n  group_by(agency, agency_name) %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE))\n\n\n#compare past and present\nnew &lt;- anti_join(agencies, agencies_past, \n          by = c(\"agency\", \"agency_name\")) %&gt;% \n  arrange(agency)\nnew\n\n\nFY25 preliminary results: Agency 480, Early Childhood ($0 expenditures) appears as new agency.\n\n\nCode\nfunds_past &lt;- allexpfiles  %&gt;% \n  filter(fy &lt; cur_fy) %&gt;% \n  mutate(fund == as.character(fund)) %&gt;% \n  group_by(fund, fund_name) %&gt;% \n  summarize(count = n(), Expenditure = sum(expenditure, na.rm = TRUE))  %&gt;% \n  drop_na()\n\nfunds &lt;- allexpfiles  %&gt;% \n  filter(fy == cur_fy) %&gt;% \n  mutate(fund == as.character(fund)) %&gt;% \n  group_by(fund, fund_name) %&gt;%  \n  summarize(count = n(), Expenditure = sum(expenditure, na.rm = TRUE)) %&gt;% \n  unique()\n\n# compare past and current year\nanti_join(funds, funds_past, \n          by = c(\"fund\", \"fund_name\")) %&gt;% \n  arrange(fund)\n# Each year these must examined closely to determine if they are a new fund, a reused fund, or if there is just a slight difference in the name of the fund\n\n\nPreliminary expenditure funds: 16 “new” funds to be inspected and determine if they are truly new funds, reused funds, or a fund that has a slightly different name than it previously had.\n\nEach year these must examined closely to determine if they are a new fund, a reused fund, or if there is just a slight difference in the name of the fund\n\n\n\nCode\n# orgs_past for orgs in the past =  927 org groups ever\norgs_past &lt;- allexpfiles %&gt;% \n  filter(fy &lt; cur_fy) %&gt;% \n  mutate(appr_org == as.character(appr_org)) %&gt;% \n  group_by(appr_org, org_name) %&gt;% unique() %&gt;% \n  summarize(Expenditure = sum(expenditure, na.rm = TRUE)) %&gt;% \n  drop_na()\n\norgs &lt;- allexpfiles %&gt;% \n  filter(fy == cur_fy) %&gt;% \n  mutate(appr_org = as.character(appr_org)) %&gt;% \n  group_by(appr_org, org_name) %&gt;% \n  summarize(Expenditure = sum(expenditure, na.rm = TRUE))\n# orgs # 393 org groups this year\n\n# compare past and current year orgs\n\nanti_join(orgs, orgs_past,\n          by = c(\"appr_org\", \"org_name\")) %&gt;% \n  arrange(appr_org)\n\n\n1 org number and org name combo are new for FY{}.\nChanges in organizations are usually not a big deal for the Fiscal Gap calculation. However keeping track of changes in organizations names may be useful in an expected way or other researchers can use it.\n\n\n4.0.2.2 Revenue Data\nNew Revenue Funds, Sources, and New Agencies:\n\n\nCode\n#### From Revenue Data ####\n\n# agencies_past # 110 agencies ever\nagencies_past &lt;- allrevfiles  %&gt;% \n  filter(fy &lt; cur_fy) %&gt;% \n  mutate(agency == as.character(agency)) %&gt;% \n  group_by(agency, agency_name) %&gt;% unique() %&gt;% \n  summarize(Receipts = sum(receipts, na.rm = TRUE)) %&gt;% \n  drop_na()\n\n\nagencies &lt;- allrevfiles  %&gt;% \n  filter(fy == cur_fy) %&gt;% \n  mutate(agency == as.character(agency)) %&gt;% \n  group_by(agency, agency_name) %&gt;% \n  summarize(Receipts = sum(receipts, na.rm = TRUE))\n\n\nanti_join(agencies, agencies_past, by = c(\"agency\", \"agency_name\")) %&gt;% \n  arrange(agency)\n\n\nNo differences!\n\n\nCode\nfunds_past &lt;- allrevfiles  %&gt;% \n  filter(fy &lt; cur_fy) %&gt;% \n  mutate(fund == as.character(fund)) %&gt;% \n  group_by(fund, fund_name) %&gt;% \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE))  %&gt;% \n  drop_na()\n\nfunds &lt;- allrevfiles  %&gt;% \n  filter(fy == cur_fy) %&gt;% \n  mutate(fund == as.character(fund)) %&gt;% \n  group_by(fund, fund_name) %&gt;%  \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE)) %&gt;% \n  unique() %&gt;% \n  drop_na()\n\n\nanti_join(funds, funds_past, by = c(\"fund\", \"fund_name\")) %&gt;% \n  arrange(fund)\n\n\n13 revenue funds were in new revenue data that were not in past data Remember, some of them maybe be false alarms and have small fund name changes.\n\n\nCode\nsources_past &lt;- allrevfiles  %&gt;% \n  filter(fy &lt; cur_fy) %&gt;% \n  mutate(source == as.character(source)) %&gt;% \n  group_by(source, source_name) %&gt;% \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE))  %&gt;% \n  drop_na()\n\nsources &lt;- allrevfiles  %&gt;% \n  filter(fy == cur_fy) %&gt;% \n  mutate(source == as.character(source)) %&gt;% \n  group_by(source, source_name) %&gt;% \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE)) %&gt;% \n  unique()\n\n\n\nnew &lt;- anti_join(sources, sources_past, by = c(\"source\", \"source_name\")) %&gt;% \n  arrange(source)\nnew\n\n\nThere are {} revenue sources were in new data that were not in past data. These need to be checked and added to the inputs/ioc_source.xlsx file.\n\n\n\n4.0.3 Recoding New and Reused Funds\n\n\n\n\n\n\nWarning\n\n\n\nRemember: allrevfiles and allexpfiles contain the data received from the comptroller without recoding agencies or funds that have changed between fiscal years. Variables were renamed when needed to have consistent names but funds and agencies have NOT been recoded for consistency in these files.\n\n\nNew or reused funds were manually added to the funds_ab_in.xlsx file and determined if they should or should not be included in Fiscal Future calculations.\nFor funds that were reused once, a 9 replaces the 0 as the first digit. If reused twice, then the first two values are 10.\n\nEx. 0350 –&gt; 9350 because its use changed.\nEx. 0367 becomes 10367 because its use has changed twice now. There was fund 0367 originally, then its use changed and it was recoded as 9367, and now it changed again so it is a 10367.\nExcel file also has alternative ways to name funds (e.g. 0397-A and 0397-B) and variables for the year that the fund stopped being used.\n\nNew or reused funds revenue file recoding:\n\n# if first character is a 0, replace with a 9 if its purpose has changed\n\nrev_allyears &lt;- allrevfiles %&gt;%\n\n      mutate(fund = ifelse(fy &lt; 2002 & fund %in% c(\"0730\", \"0241\", \"0350\", \"0367\", \"0381\", \"0382\", \"0526\", \"0603\", \"0734\", \"0913\", \"0379\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n  \n  mutate(fund = ifelse (fy &lt; 2008 & fund %in% c(\"0027\", \"0033\", \"0037\", \"0058\", \"0062\", \"0066\", \"0075\", \"0083\", \"0116\", \"0119\", \"0120\", \"0122\", \"0148\", \"0149\", \"0157\", \"0158\", \"0166\", \"0194\", \"0201\", \"0209\", \"0211\", \"0217\", \"0223\", \"0231\", \"0234\", \"0253\", \"0320\", \"0503\", \"0505\", \"0512\", \"0516\", \"0531\", \"0532\", \"0533\", \"0547\", \"0563\", \"0579\", \"0591\", \"0606\", \"0616\", \"0624\", \"0659\", \"0662\", \"0665\", \"0676\", \"0710\", \n\n\"0068\", \"0076\", \"0115\", \"0119\", \"0168\", \"0182\", \"0199\", \"0241\", \"0307\", \"0506\", \"0509\", \"0513\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund = ifelse(fy &lt; 2016 & fund %in% c(\"0263\", \"0399\", \"0409\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2017 & fund == \"0364\", str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2018 & fund %in% c(\"0818\", \"0767\", \"0671\", \"0593\", \"0578\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n\n  mutate(fund = ifelse(fy&gt;1999 & fy &lt; 2018 & fund == \"0231\", \"10231\", fund) ) %&gt;%\n  \n\n  mutate(fund = ifelse(fy &lt; 2019 & fund %in% c(\"0161\", \"0489\", \"0500\", \"0612\", \"0893\", \"0766\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2020 & fund %in% c(\"0254\", \"0304\", \"0324\", \"0610\", \"0887\", \"0908\", \"0939\", \"0968\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2021 & fund %in% c(\"0255\", \"0325\", \"0348\", \"0967\", \"0972\"), str_replace(fund, \"0\",\"9\"), fund) ) %&gt;%\n  \n   #2022 changes\n\n  mutate(fund = ifelse(fy &lt; 2022 & fund %in% c(\"0110\",\"0165\",\"0351\", \"0392\", \"0393\", \"0422\", \"0544\", \"0628\", \"0634\",  \"0656\", \"0672\", \"0683\", \"0723\", \"0742\", \"0743\"), str_replace(fund, \"0\",\"9\"), as.character(fund))) %&gt;%  # replaces first 0 it finds with a 9\n\n  mutate(fund = ifelse(fy &lt; 2022 & fund == \"0367\", \"10367\", as.character(fund)) # fund reused for 3rd time\n         \n  ) %&gt;%\n  \n  # 2023 fund changes\n  mutate(fund = ifelse(fy &lt; 2023 & fund %in% c(\"0099\",\"0210\",\"0246\", \"0250\", \"0264\", \"0268\", \"0300\", \"0311\", \"0403\", \"0448\",\"0645\", \"0727\", \"0729\", \"0791\"), str_replace(fund,\"0\", \"9\"), as.character(fund))) %&gt;%\n  mutate(fund = ifelse(fy &lt; 2023 & fund == \"0734\" , \"10734\", as.character(fund)),\n         fund = ifelse(fy &lt; 2023 & fund == \"0820\", \"10820\", as.character(fund) ) # fund reused for 3rd time\n  ) %&gt;%\n  \n  #  other fund changes noticed on April 1, 2024\n  mutate(fund = ifelse(fy &lt; 2023 & fund %in% c(\"0490\", \"0684\", \"0747\", \"0869\"), str_replace(fund,\"0\", \"9\"), as.character(fund)))  |&gt;\n  \n  mutate(fund = ifelse(fy &lt; 2024 & fund %in% c(\"0064\",\"0162\",\"0267\", \"0349\", \"0420\"), str_replace(fund,\"0\", \"9\"), as.character(fund))) |&gt;\n  \n  # fy2025 FUND CHANGES\n  mutate(fund = ifelse(fy &lt; 2025 & fund %in% c(\"0213\", \"0235\", \"0280\", \"0321\", \"0456\", \"0486\", \"0487\", \"0494\", \"0507\"), str_replace(fund,\"0\", \"9\"), as.character(fund)),\n         \n         fund = ifelse(fy &lt; 2025 & fund == \"0253\", \"10253\", as.character(fund)), # fund reused for 3rd time)  \n         fund = ifelse(fy &lt; 2025 & fund == \"0526\", \"10526\", as.character(fund)) # fund reused for 3rd time)  \n         )\n\nExpenditure recoding:\n\n\nCode\n# if first character is a 0, replace with a 9\n\nexp_allyears &lt;- allexpfiles %&gt;%\n\n      mutate(fund = ifelse(fy &lt; 2002 & fund %in% c(\"0730\", \"0241\", \"0350\", \"0367\", \"0381\", \"0382\", \"0526\", \"0603\", \"0734\", \"0913\", \"0379\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund = ifelse(fy &lt; 2008 & fund %in% c(\"0027\", \"0033\", \"0037\", \"0058\", \"0062\", \"0066\", \"0075\", \"0083\", \"0116\", \"0119\", \"0120\", \"0122\", \"0148\", \"0149\", \"0157\", \"0158\", \"0166\", \"0194\", \"0201\", \"0209\", \"0211\", \"0217\", \"0223\", \"0231\", \"0234\", \"0253\", \"0320\", \"0503\", \"0505\", \"0512\", \"0516\", \"0531\", \"0532\", \"0533\", \"0547\", \"0563\", \"0579\", \"0591\", \"0606\", \"0616\", \"0624\", \"0659\", \"0662\", \"0665\", \"0676\", \"0710\", \n\n\"0068\", \"0076\", \"0115\", \"0119\", \"0168\", \"0182\", \"0199\", \"0241\", \"0307\", \"0506\", \"0509\", \"0513\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n  \n  mutate(fund = ifelse(fy &lt; 2016 & fund %in% c(\"0263\", \"0399\", \"0409\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2017 & fund == \"0364\", str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2018 & fund %in% c(\"0818\", \"0767\", \"0671\", \"0593\", \"0578\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund = ifelse(fy&gt;1999 & fy &lt; 2018 & fund == \"0231\", \"10231\", fund) ) %&gt;%\n  \n  mutate(fund = ifelse(fy &lt; 2019 & fund %in% c(\"0161\", \"0489\", \"0500\", \"0612\", \"0893\", \"0766\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2020 & fund %in% c(\"0254\", \"0304\", \"0324\", \"0610\", \"0887\", \"0908\", \"0939\", \"0968\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2021 & fund %in% c(\"0255\", \"0325\", \"0348\", \"0967\", \"0972\"), str_replace(fund, \"0\",\"9\"), fund))  %&gt;%\n  \n  #2022 changes\n  mutate(fund = ifelse(fy &lt; 2022 & fund %in% c(\"0110\",\"0165\",\"0351\", \"0392\", \"0393\", \"0422\", \"0544\", \"0628\", \"0634\",  \"0656\", \"0672\", \"0683\",\"0723\", \"0742\", \"0743\"), str_replace(fund, \"0\",\"9\"), as.character(fund))) %&gt;%  # replaces first 0 it finds with a 9\n\n  mutate(fund = ifelse(fy &lt; 2022 & fund == \"0367\", \"10367\", as.character(fund)) # fund reused for 3rd time \n\n  ) %&gt;%\n\n  # 2023 fund changes\n  mutate(fund = ifelse(fy &lt; 2023 & fund %in% c(\"0099\",\"0210\",\"0246\", \"0250\", \"0264\", \"0268\", \"0300\", \"0311\", \"0403\", \"0448\",\"0645\", \"0727\", \"0729\", \"0791\"), str_replace(fund,\"0\", \"9\"), as.character(fund))) %&gt;%\n  mutate(fund = ifelse(fy &lt; 2023 & fund == \"0734\" , \"10734\", as.character(fund)),\n         fund = ifelse(fy&lt;2023 & fund == \"0820\", \"10820\", as.character(fund) ) # fund reused for 3rd time\n  ) %&gt;%\n\n #  other fund changes noticed on April 1, 2024\n  mutate(fund = ifelse(fy &lt; 2023 & fund %in% c(\"0490\", \"0684\", \"0747\", \"0869\"), str_replace(fund,\"0\", \"9\"), as.character(fund)))  |&gt;\n  \n  mutate(fund = ifelse(fy &lt; 2024 & fund %in% c(\"0064\",\"0162\",\"0267\", \"0349\", \"0420\"), str_replace(fund,\"0\", \"9\"), as.character(fund))) |&gt;\n  \n  # fy2025 FUND CHANGES\n  mutate(fund = ifelse(fy &lt; 2025 & fund %in% c(\"0213\", \"0235\", \"0280\", \"0321\", \"0456\", \"0486\", \"0487\", \"0494\", \"0507\"), str_replace(fund,\"0\", \"9\"), as.character(fund)),\n         \n         fund = ifelse(fy &lt; 2025 & fund == \"0253\", \"10253\", as.character(fund)),\n         fund = ifelse(fy &lt; 2025 & fund == \"0526\", \"10526\", as.character(fund)     ) # fund reused for 3rd time)  \n         \n  )\n\n\n\n\n\n\n\n\nTip\n\n\n\nThe funds_ab_in.xlsx file contains the following information: all funds that have existed since 1998, if they still exist, indicates if fund numbers have been reused for varying purposes, and is updated yearly with new fund numbers used by the IOC.\n\n\n\n\nCode\nagencies_exp &lt;- exp_allyears %&gt;% \n  distinct(agency, agency_name) %&gt;% \n  filter(!is.na(agency_name)) %&gt;%\n  mutate(agency = as.character(agency))\n\nfunds_exp &lt;- exp_allyears %&gt;% \n  distinct(fund, fund_name) %&gt;% \n  filter(!is.na(fund_name))\n\nfunds_ab_in = readxl::read_excel(\"inputs/funds_ab_in.xlsx\")\n\n\nexp_temp &lt;- exp_allyears %&gt;% \n  select(-fund_name) %&gt;%\n  arrange(fund, fy)  %&gt;%\n# join  funds_ab_in  to exp_temp\n  left_join(funds_ab_in, by = \"fund\")\n\n\n\n# I think we can delete this. But still checking and runing code - AWM 7/16/2025\n# Agency == 799 for Statutory transfers \n#  Object == 1993 is for Interfund cash transfers  \n exp_temp &lt;- exp_temp %&gt;% \n  mutate(transfer = ifelse(org_name == \"TRANSFERS\", 1, 0),\n         trans_agency = ifelse(org_name == \"TRANSFERS\",\n                               str_sub(obj_seq_type,1,3), NA),\n         trans_type = ifelse(org_name == \"TRANSFERS\",\n                             str_sub(obj_seq_type, 4,9), NA)) %&gt;%\n\n  mutate(\n         object = ifelse(transfer == 0, as.character(str_sub(obj_seq_type, 1, 4)), NA_character_),  # appropriation object\n         sequence = ifelse(transfer == 0, as.character(str_sub(obj_seq_type, 5,6)), NA_character_),\n         type = ifelse(transfer == 0, str_sub(obj_seq_type, 7,8), NA_character_)    # appropriation type\n         )\n\n\n\nthe initial combined and years of data are saved as dataframes named exp_allyears and rev_allyears. These are then saved as exp_temp and rev_temp while recoding variables. This is BEFORE creating Fiscal Future category groups and further data cleaning done in the Calculating the Fiscal Gap page.\n\nUpdate Agencies: Some agencies have merged with others or changed names over time.\n[[ TO DO: Add appendix item of Current agencies (with indented past agencies) from the Methodology Document. ]]\n\n\nCode\n# recodes old agency numbers to consistent agency number\nexp_temp &lt;- exp_temp %&gt;% \n\n  mutate(agency = case_when(\n\n    (agency==\"438\"| agency==\"475\" |agency == \"505\") ~ \"440\",\n    # financial institution &  professional regulation &\n     # banks and real estate  --&gt; coded as  financial and professional reg\n\n    agency == \"473\" ~ \"588\", # nuclear safety moved into IEMA\n\n    (agency ==\"531\" | agency ==\"577\") ~ \"532\", # coded as EPA\n\n    (agency ==\"556\" | agency == \"538\") ~ \"406\", # coded as agriculture\n\n    agency == \"560\" ~ \"592\", # IL finance authority (fire trucks and agriculture stuff)to state fire marshal\n\n    agency == \"570\" & fund == \"0011\" ~ \"494\",   # city of Chicago road fund to transportation\n    TRUE ~ (as.character(agency)))) \n\n# \n# exp_temp &lt;- exp_temp %&gt;% filter(!is.na(fy))\n# ## Fill in missing names for funds\n# exp_temp &lt;- exp_temp  %&gt;%\n#   select(-c(agency_name)) %&gt;%\n#   left_join(funds_exp) %&gt;%\n#   left_join(agencies_exp)\n\n\nFor aggregating revenue, use the rev_allyears file, join the funds_ab_in file to it, and then join the ioc_source_type file. Remember: You need to update the funds_ab_in and ioc_source_type file every year!\n\nrev_temp &lt;- inner_join(rev_allyears, funds_ab_in, by = \"fund\") %&gt;% \n  arrange(source) \n\nfunds_rev &lt;- rev_temp %&gt;% distinct(fund, fund_name_ab) %&gt;% filter(!is.na(fund_name_ab))\n\nagencies_rev &lt;- rev_temp %&gt;% distinct(agency, agency_name) %&gt;% filter(!is.na(agency_name)) %&gt;%\n  mutate(agency = as.character(agency))\n\n\n\n# need to update the ioc_source_type file every year! \nioc_source_type &lt;- readxl::read_xlsx(\"./inputs/ioc_source.xlsx\")\n\nrev_temp &lt;- left_join(rev_temp, ioc_source_type, by = \"source\")\n\nsources_rev &lt;- rev_temp %&gt;% \n  distinct(source, source_name_AWM) %&gt;% \n  filter(!is.na(source_name_AWM))\n\n\n# fund info to revenue for all years\nrev_temp &lt;- rev_temp %&gt;% \n  select(-c(fund_name, agency_name, \n            source_name_AWM))  %&gt;% \n  left_join(funds_rev) %&gt;%\n  left_join(sources_rev)\n\n\n\n\n\n# automatically used source, source name does not match for the join to work using source_name\n\n# recodes old agency numbers to consistent agency number\nrev_temp &lt;- rev_temp %&gt;% \n\n  mutate(agency = case_when(\n    (agency==\"438\"| agency==\"475\" |agency == \"505\") ~ \"440\", # financial institution &  professional regulation &\n     # banks and real estate  --&gt; coded as  financial and professional reg\n\n    agency == \"473\" ~ \"588\", # nuclear safety moved into IEMA\n    (agency ==\"531\" | agency ==\"577\") ~ \"532\", # coded as EPA\n    (agency ==\"556\" | agency == \"538\") ~ \"406\", # coded as agriculture\n    agency == \"560\" ~ \"592\", # IL finance authority (fire trucks and agriculture stuff)to state fire marshal\n    agency == \"570\" & fund == \"0011\" ~ \"494\",   # city of Chicago road fund to transportation\n\n    TRUE ~ (as.character(agency)))) %&gt;%\n  #left_join(sources_rev) %&gt;%\n  left_join(agencies_rev) # add correct agency names back in\n\n\n\n4.0.4 Export Intermediate Files\n\n\nCode\nwrite_csv(rev_temp, file = paste0(\"./data/FY\", current_year, \" Files/rev_temp.csv\"))\n\nwrite_csv(exp_temp, file = paste0(\"./data/FY\", current_year, \" Files/exp_temp.csv\"))\n\n\n\n\n\n\n\n\nTip\n\n\n\nThe exp_temp.csv file and rev_temp.csv file are most likely the data that non-Fiscal Future researchers would want to use for their own analyses. These files should have consistent agencies and funds tracked from 1998 to the present.",
    "crumbs": [
      "Methodology",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Gathering and Cleaning Data!</span>"
    ]
  },
  {
    "objectID": "past-mistakes.html",
    "href": "past-mistakes.html",
    "title": "5  Past Report Corrections",
    "section": "",
    "text": "5.1 Yearly Change Tables\nWe would like to draw attention to a methodological change that occurred in the data aggregation process when calculating the Fiscal Gap. The following reports had fiscal gaps reported that were larger than they would have been if using the methodology used when calculating the FY2023 fiscal gap.",
    "crumbs": [
      "Methodology",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Past Report Corrections</span>"
    ]
  },
  {
    "objectID": "past-mistakes.html#yearly-change-tables",
    "href": "past-mistakes.html#yearly-change-tables",
    "title": "5  Past Report Corrections",
    "section": "",
    "text": "(b) Yearly Change in Expenditures\n\n\n\n\n\n\n\n\n\n\nEXPENDITURE CATEGORY\nFY 2023 ($ BILLIONS)\nFY 2022 ($ BILLIONS)\n1-YEAR CHANGE\n25-YEAR CAGR\n\n\n\n\nMedicaid\n32.4\n28.7\n13.1%\n7.4%\n\n\nK-12 Education\n14.7\n13.4\n9.9%\n4.3%\n\n\nLocal Govt Revenue Sharing\n10.9\n10.3\n5.4%\n4.7%\n\n\nHuman Services\n8.8\n7.3\n21.3%\n3.3%\n\n\nState Pension Contribution\n6.8\n6.5\n5.1%\n10.5%\n\n\nTransportation\n5.0\n4.3\n16.3%\n3.8%\n\n\nState Employee Healthcare\n3.0\n3.0\n-0.1%\n5.8%\n\n\nUniversity Education\n2.5\n2.3\n12.5%\n0.8%\n\n\nDebt Service\n2.0\n2.0\n-2.9%\n5.7%\n\n\nRevenue\n2.0\n1.8\n8.0%\n6.4%\n\n\nTollway\n1.9\n2.1\n-9.9%\n6.8%\n\n\nCorrections\n1.7\n1.5\n13.5%\n2.2%\n\n\nPublic Safety\n1.7\n1.7\n1.2%\n5.7%\n\n\nChildren & Family Services\n1.6\n1.3\n26.0%\n0.8%\n\n\nCommunity Development\n1.5\n1.4\n7.7%\n4.8%\n\n\nAll Other Expenditures **\n14.0\n12.2\n14.4%\n5.7%\n\n\nTotal Expenditures\n110.6\n99.8\n10.8%\n5.2%\n\n\n\n\n\n\n(c) Yearly Change in Revenue Sources\n\n\n\n\n\n\n\n\n\n\nREVENUE CATEGORY\nFY 2023 ($ BILLIONS)\nFY 2022 ($ BILLIONS)\n1-YEAR CHANGE\n25-YEAR CHANGE\n\n\n\n\nIncome Tax\n22.1\n23.8\n-7.3%\n5.1%\n\n\nFederal Medicaid Reimbursements\n20.2\n19.0\n6.1%\n7.5%\n\n\nSales Tax\n16.2\n15.4\n4.8%\n3.3%\n\n\nFederal Other\n10.9\n19.4\n-43.9%\n4.3%\n\n\nCorporate Income Tax\n10.1\n9.7\n4.3%\n7.6%\n\n\nMedical Provider Assessments\n4.1\n3.7\n9.5%\n8.4%\n\n\nReceipts from Revenue Producing\n2.6\n2.4\n8.5%\n5.2%\n\n\nMotor Fuel Taxes\n2.5\n2.5\n1.5%\n2.7%\n\n\nFederal Transportation\n2.1\n1.8\n15.3%\n3.8%\n\n\nLicenses, Fees, Registration\n2.1\n1.9\n9.2%\n7.9%\n\n\nAll Other Sources **\n15.2\n13.3\n14.4%\n4.3%\n\n\nTotal Revenue\n108.1\n113.0\n-4.4%\n5.1%\n\n\n\nThe Fiscal Gap was reported to be larger than it was due to excluding fund 0278 (Income Tax Refund Fund) and manually subtracting Tax Refunds from the Income and Corporate Tax Revenue. This resulted in an extra $2+ Billion being subtracted from the revenue side and an increased fiscal gap.\n\n\n\n\n\n5.1.1 Other comments on past reports:\nIn the FY2013 to FY2014 reports, the fiscal gap changed by over $4 billion in the 2010 calculations alone (the FY2013 report had around $12 billion gap and then FY14 report had around $8 billion for the fiscal gap).\nFY20 vs FY23 reports:\nOutput created for the FY20 report had $3.622 billion for Debt Service, whereas the value is 1.947 billion using the FY23 methodology. State Pension calculations also had $3 or $4 billion changes in aggregate expenditures (9.2 vs 5.3 billion) each year.\n\nThere have been other minor changes in how the fiscal gap is calculated over the years. For example, various methodology documents referenced including the debt principal and interest. Some expenditure categories created by the past researchers included certain items in some years, and excluded them in others. This is partly due to changes in how the research was conducted (Excel tables, Stata, and then R) and due to changing ideology of what should or should not be considered as a reoccuring revenue source or expense. Most revenue and expenditure categories have remained consistent, with nearly identical totals when calculated by various researchers over the years, but some categories have varied in totals and calculation methods.\nThese differences impacted the overall Fiscal Gap calculated in previous reports:\n\nDebt Service (Over estimated in some years due to counting Principal & Interest instead of just Interest as a cost of debt)\nPensions (over estimated due to including object 4430 for retirement benefits paid to employees instead of object 4431 for state payments into the pension fund)\nEmployee Healthcare (over estimated? - I think this was almost a mistake in FY21 and FY22 papers but then it was caught before being published - somewhere there is a printed excel sheet of healthcare expenditures that is highlighted, find it and double check.)\nIndividual Income Tax Revenue (under estimated from refund fund subtraction)",
    "crumbs": [
      "Methodology",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Past Report Corrections</span>"
    ]
  }
]